{
    "version": "https://jsonfeed.org/version/1",
    "title": "欢迎来到 fo 的网络安全小站 • All posts by \"漏洞复现\" tag",
    "description": "欢迎来到 fo 的网络安全小站",
    "home_page_url": "http://zhyzhyzhy.cn",
    "items": [
        {
            "id": "http://zhyzhyzhy.cn/2022/10/28/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "http://zhyzhyzhy.cn/2022/10/28/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "shiro反序列化漏洞环境搭建",
            "date_published": "2022-10-27T17:00:00.000Z",
            "content_html": "<h1 id=\"shiro反序列化漏洞分析起始篇\"><a class=\"anchor\" href=\"#shiro反序列化漏洞分析起始篇\">#</a> shiro 反序列化漏洞分析起始篇</h1>\n<h2 id=\"shiro框架\"><a class=\"anchor\" href=\"#shiro框架\">#</a> Shiro 框架</h2>\n<h3 id=\"框架介绍\"><a class=\"anchor\" href=\"#框架介绍\">#</a> 框架介绍</h3>\n<blockquote>\n<p>Apache Shiro™ is a powerful and easy-to-use Java security framework that performs authentication, authorization, cryptography, and session management. With Shiro’s easy-to-understand API, you can quickly and easily secure any application – from the smallest mobile applications to the largest web and enterprise applications.<br />\nApache Shiro™是一个强大且易用的 Java 安全框架，能够用于身份验证、授权、加密和会话管理。Shiro 拥有易于理解的 API, 您可以快速、轻松地获得任何应用程序 —— 从最小的移动应用程序到最大的网络和企业应用程序。</p>\n</blockquote>\n<p>简而言之，Apache Shiro 是一个强大灵活的开源安全框架，可以完全处理身份验证、授权、加密和会话管理。</p>\n<h2 id=\"漏洞原理\"><a class=\"anchor\" href=\"#漏洞原理\">#</a> 漏洞原理</h2>\n<p>Apache Shiro 框架提供了记住密码的功能（RememberMe），用户登录成功后会生成经过加密并编码的 cookie。在服务端对 rememberMe 的 cookie 值，先 base64 解码然后 AES 解密再反序列化，就导致了反序列化 RCE 漏洞。</p>\n<p>在服务端接收 cookie 值时，按以下步骤解析：</p>\n<pre><code>检索RemeberMe cookie的值\n\nBase64解码\n\n使用ACE解密（加密密钥硬编码）\n\n进行反序列化操作（未作过滤处理）\n</code></pre>\n<p>Payload 过程：<br />\n命令 =&gt; 序列化 =&gt;AES 加密 =&gt;base64 编码 =&gt;RememberMe Cookie 值</p>\n<p>在整个漏洞利用过程中，比较重要的是 AES 加密的密钥，如果没有修改默认的密钥那么就很容易就知道密钥了，Payload 构造起来也是十分的简单。</p>\n<p>总结一下：就是服务器在接收到 Client 的请求后会获取 Cookie 中的 RemeberMe 字段然后进行固定格式的解码然后对解码数据进行反序列化最终导致远程代码执行。</p>\n<h2 id=\"环境搭建\"><a class=\"anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<p>tomcat 8.5.76 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90b21jYXQuYXBhY2hlLm9yZy8=\"> (下载地址：Apache Tomcat® - Welcome!)</span></p>\n<p>JDK 1.7 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UvamF2YXNlNy1hcmNoaXZlLWRvd25sb2Fkcy5odG1s\">（下载地址：Java Archive Downloads - Java SE 7）</span></p>\n<p>shiro 源码（下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlbG9hZC5naXRodWIuY29tL2FwYWNoZS9zaGlyby96aXAvc2hpcm8tcm9vdC0xLjIuNCVFRiVCQyU4OQ==\">https://codeload.github.com/apache/shiro/zip/shiro-root-1.2.4）</span></p>\n<blockquote>\n<p>tomcat 和 JDK 下载备用</p>\n</blockquote>\n<h3 id=\"下载shiro源码将压缩包解压后使用idea打开\"><a class=\"anchor\" href=\"#下载shiro源码将压缩包解压后使用idea打开\">#</a> 下载 shiro 源码，将压缩包解压后使用 IDEA 打开</h3>\n<p>打开  <code>samples\\web\\pom.xml</code> <br />\n<img data-src=\"https://s2.loli.net/2022/10/28/zODbxr5iRuNZc2f.png\" alt=\"shiro1.png\" /><br />\n 指定 javax.servlet 依赖包的版本为 1.2（如果不指定版本，会报无法解析 jsp 的 500 错误）</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>javax.servlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>jstl<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>runtime<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>修改好后在 pom 文件右击然后选择重新加载 Maven 项目或者直接点击文件右上角的小标志</p>\n<h3 id=\"指定jdk\"><a class=\"anchor\" href=\"#指定jdk\">#</a> 指定 JDK</h3>\n<p>打开项目结构，添加 SDK ，选择我们之前下载的 JDK1.7<br />\n<img data-src=\"https://s2.loli.net/2022/10/28/FjJarSlbfdEPZoy.png\" alt=\"jdk1.png\" /><br />\n 更改项目的 SDK<br />\n<img data-src=\"https://s2.loli.net/2022/10/28/cyJ1DzrLT8AuoYl.png\" alt=\"jdk2.png\" /></p>\n<h3 id=\"tomcat-配置\"><a class=\"anchor\" href=\"#tomcat-配置\">#</a> tomcat 配置</h3>\n<p>点击右上角添加项目<br />\n<img data-src=\"https://s2.loli.net/2022/10/28/Qa3P9uLdyRGDx2s.png\" alt=\"2.png\" /><br />\n 添加一个本地的 Tomcat 项目<br />\n<img data-src=\"https://s2.loli.net/2022/10/28/iYOEV2ADMm81TXy.png\" alt=\"3.png\" /><br />\n 添加项目部署<br />\n<img data-src=\"https://s2.loli.net/2022/10/28/fLJTGYokj4ph1AK.png\" alt=\"4.png\" /><br />\n 选择 sample-web 项目<br />\n<img data-src=\"https://s2.loli.net/2022/10/28/V7eHjzYUZuPkCGq.png\" alt=\"5.png\" /><br />\n<img data-src=\"https://s2.loli.net/2022/10/28/VoqruNiZcSvAmdP.png\" alt=\"6.png\" /><br />\n 确定后运行项目<br />\n运行项目后可以在下面的服务小工具栏的服务看到服务部署情况<br />\n如果打开项目成功那么会自动打开默认配置的浏览器</p>\n<p><img data-src=\"https://s2.loli.net/2022/10/28/CfOBmnN4M1ZiLw7.png\" alt=\"7.png\" /></p>\n<h1 id=\"完结\"><a class=\"anchor\" href=\"#完结\">#</a> 完结</h1>\n<p>下篇来分析为何会产生安安全问题</p>\n",
            "tags": [
                "网络安全",
                "JAVA安全",
                "反序列化",
                "漏洞复现"
            ]
        }
    ]
}