{
    "version": "https://jsonfeed.org/version/1",
    "title": "欢迎来到 fo 的网络安全小站 • All posts by \"ctf\" tag",
    "description": "欢迎来到 fo 的网络安全小站",
    "home_page_url": "http://zhyzhyzhy.cn",
    "items": [
        {
            "id": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-5-5/",
            "url": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-5-5/",
            "title": "HackMyVM Venus Walkthrough 4/5",
            "date_published": "2022-11-07T20:00:00.000Z",
            "content_html": "<h1 id=\"hackmyvm-venus-walkthrough-55\"><a class=\"anchor\" href=\"#hackmyvm-venus-walkthrough-55\">#</a> HackMyVM Venus Walkthrough 5/5</h1>\n<h2 id=\"0x41\"><a class=\"anchor\" href=\"#0x41\">#</a> 0x41</h2>\n<blockquote>\n<p>Mission: User sarah uses header in <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdC9rZXkucGhw\">http://localhost/key.php</span></p>\n</blockquote>\n<p>Sarah 使用 headers 与 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdC9rZXkucGhw\">http://localhost/key.php</span> 通信<br />\n然后让我们用 curl 调用 URL 来看看会发生什么：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost/key.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Key header is true?</pre></td></tr></table></figure><p>服务器询问我们标头中的 &quot;Key&quot; 字段是否为真。当然，我们的第一个请求并非如此。但是使用选项 -H 我们可以 curl 为调用提供标题。所以让我们设置标题 &quot;Key：true&quot;：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Key: true\"</span> http://localhost/key.php</pre></td></tr></table></figure><p>现在服务器 返回 0x42 的密码。</p>\n<h2 id=\"0x42\"><a class=\"anchor\" href=\"#0x42\">#</a> 0x42</h2>\n<blockquote>\n<p>Mission: The password of mercy is hidden in this directory.</p>\n</blockquote>\n<p>所以下一级的密码就隐藏在这个目录下。让我们看看我们可以在目录中找到什么：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>la <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  sarah <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  sarah   <span class=\"token number\">16</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> sarah sarah  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> sarah sarah <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> sarah sarah  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  sarah   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  sarah  <span class=\"token number\">175</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr></table></figure><p>如果不仔细看，很容易错过隐藏文件，但我们作为专业人士当然会立即识别文件 '...'。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p>有了这个，我们得到了下一个级别的密码。</p>\n<h2 id=\"0x43\"><a class=\"anchor\" href=\"#0x43\">#</a> 0x43</h2>\n<blockquote>\n<p>Mission: User mercy is always wrong with the password of paula.</p>\n</blockquote>\n<p>Mercy 似乎不记得 Paula 的密码了。让我们看看我们可以找到什么样的文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  mercy <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  mercy  <span class=\"token number\">133</span> Apr  <span class=\"token number\">7</span> 06:00 .bash_history</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> mercy mercy  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> mercy mercy <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> mercy mercy  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  mercy   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  mercy  <span class=\"token number\">190</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr></table></figure><p>虽然我们没有找到 Mercy 存储 Paula 密码的密码文件，但我们确实找到了其他同样好的东西：文件 '.bash_history'。使用命令  <code>history</code>  ，我们可以显示 Mercy 所做的最后一个命令行条目：</p>\n<pre><code>history\n</code></pre>\n<p>其中输出的一行看起来很像下一级的密码。</p>\n<h2 id=\"0x44\"><a class=\"anchor\" href=\"#0x44\">#</a> 0x44</h2>\n<blockquote>\n<p>Mission: The user karla trusts me, she is part of my group of friends.</p>\n</blockquote>\n<p>karla 在我们的朋友组中。然后让我们看看我们作为 Paula 属于哪些组：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">groups</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>paula hidden</pre></td></tr></table></figure><p>我们属于 'paula' 和 'hidden' 组。在这一点上，'hidden' 组看起来很有希望。然后让我们看看哪些文件被分配到了 'hidden' 组：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-group</span> hidden <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/usr/src/.karl-a</pre></td></tr></table></figure><p>只能找到对应组的一个文件。让我们看一下这个文件的内容：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /usr/src/.karl-a</pre></td></tr></table></figure><p>这看起来很像下一级的密码。</p>\n<h2 id=\"0x45\"><a class=\"anchor\" href=\"#0x45\">#</a> 0x45</h2>\n<blockquote>\n<p>Mission: User denise has saved her password in the image.</p>\n</blockquote>\n<p>denise 在一张图片中保存了下一级的密码。通常，我们要做的第一件事是查看主目录中的文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  karla  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root   <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> karla karla   <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> karla karla  <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> karla karla   <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  karla    <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  karla   <span class=\"token number\">176</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  karla <span class=\"token number\">32946</span> Apr  <span class=\"token number\">7</span> 06:00 yuju.jpg</pre></td></tr></table></figure><p>实际上，有一个名为 &quot;yuju.jpg&quot; 的图像文件。此外，使用检查文件格式 <code>file</code>  确认它是 JPEG 文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">file</span> yuju.jpg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yuju.jpg: JPEG image data, JFIF standard <span class=\"token number\">1.01</span>, resolution <span class=\"token punctuation\">(</span>DPI<span class=\"token punctuation\">)</span>, density 96x96, segment length <span class=\"token number\">16</span>, Exif Standard: <span class=\"token punctuation\">[</span>TIFF image data, big-endian, <span class=\"token assign-left variable\">direntries</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>, baseline, precision <span class=\"token number\">8</span>, 442x463, components <span class=\"token number\">3</span></pre></td></tr></table></figure><p>现在，在我们假设使用一些奇特的密码隐写技术将密码隐藏在图像文件中之前，让我们看一下图像的 Exif 数据：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>exiftool yuyu.jpg</pre></td></tr></table></figure><p>事实上，我们在 about 标签中发现了一些看起来很像下一级密码的东西。</p>\n<h2 id=\"0x46\"><a class=\"anchor\" href=\"#0x46\">#</a> 0x46</h2>\n<blockquote>\n<p>Mission: The user zora is screaming doas!</p>\n</blockquote>\n<p>如果 Zora 在大声喊 doas，让我们使用它：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>doas</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>usage: doas <span class=\"token punctuation\">[</span>-Lns<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-C config<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-u user<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>args<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>该命令期望执行另一个命令。此外，您可以指定执行命令的用户。因此，如果我们可以使用用户 &quot;zora&quot; 执行 <code>bash</code> ，我们将处于下一个级别：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>doas <span class=\"token parameter variable\">-u</span> zora /bin/bash</pre></td></tr></table></figure><p>现在我们只需要输入我们自己的密码（&quot;denise&quot; 的密码），我们就进入了下一个级别！</p>\n<h2 id=\"0x47\"><a class=\"anchor\" href=\"#0x47\">#</a> 0x47</h2>\n<blockquote>\n<p>Mission: The user belen has left her password in venus.hmv</p>\n</blockquote>\n<p>任务文本表 belen 将密码保存在一个名为 &quot;venus.hmv&quot; 的文件中。<br />\n首先，让我们看看主目录中有什么：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root zora <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> zora zora  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> zora zora <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> zora zora  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root zora   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root zora  <span class=\"token number\">173</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root zora   <span class=\"token number\">16</span> Apr  <span class=\"token number\">7</span> 06:00 zora_pass.txt</pre></td></tr></table></figure><p>没有名为 &quot;venus.hmv&quot; 的文件。然后我们只搜索文件系统范围：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-name</span> venus.hmv <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr></table></figure><p>再次没有成功。该文件似乎不存在。也许 'venus.hmv' 根本不是一个文件，而是一个 URL。这可以很容易地找到 curl：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> venus.hmv</pre></td></tr></table></figure><p>事实上，我们得到了下一级的密码作为响应。</p>\n<h2 id=\"0x48\"><a class=\"anchor\" href=\"#0x48\">#</a> 0x48</h2>\n<blockquote>\n<p>Mission: It seems that belen has stolen the password of the user leona…</p>\n</blockquote>\n<p>再次，让我们先看看我们可以在 Belen 的主目录中找到哪些文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  belen <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> belen belen  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> belen belen <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> belen belen  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  belen   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  belen  <span class=\"token number\">197</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  belen   <span class=\"token number\">32</span> Apr  <span class=\"token number\">7</span> 06:00 stolen.txt</pre></td></tr></table></figure><p>这里的文件'stolen.txt' 看起来很有希望。我们来看看内容：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> stolen.txt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$1</span><span class=\"token variable\">$leona</span><span class=\"token variable\">$lhWp56YnWAMz6z32Bw53L0</span></pre></td></tr></table></figure><p>字符串开头的字符串 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 告诉我们它是  <code>md5crypt</code>  格式。<br />\n让我们将字符串保存到本地文件，让  <code>JohnTheRipper</code>  看看他是否可以找到匹配的明文到哈希：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>john <span class=\"token parameter variable\">--format</span><span class=\"token operator\">=</span>md5crypt <span class=\"token parameter variable\">--wordlist</span><span class=\"token operator\">=</span>/usr/share/wordlists/rockyou.txt stolen.txt</pre></td></tr></table></figure><p>JohnTheRipper 破解了出来，并为我们提供了 0x49 的密码。</p>\n<h2 id=\"0x49\"><a class=\"anchor\" href=\"#0x49\">#</a> 0x49</h2>\n<blockquote>\n<p>Mission: User ava plays a lot with the DNS of venus.hmv lately…</p>\n</blockquote>\n<p>Ava 使用 venus.hmv 的 DNS 记录。然后让我们查看存储本地 DNS 记录的 'bind' 文件夹：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span> /etc/bind</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-sr-x <span class=\"token number\">2</span> root <span class=\"token builtin class-name\">bind</span> <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> Apr  <span class=\"token number\">8</span> <span class=\"token number\">18</span>:33 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">1991</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 bind.keys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">237</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 db.0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">271</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 db.127</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">237</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 db.255</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">353</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 db.empty</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">270</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 db.local</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root <span class=\"token builtin class-name\">bind</span>  <span class=\"token number\">613</span> Apr  <span class=\"token number\">7</span> 06:00 db.venus.hmv</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root <span class=\"token builtin class-name\">bind</span>  <span class=\"token number\">463</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 named.conf</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root <span class=\"token builtin class-name\">bind</span>  <span class=\"token number\">498</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 named.conf.default-zones</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root <span class=\"token builtin class-name\">bind</span>  <span class=\"token number\">307</span> Apr  <span class=\"token number\">7</span> 06:00 named.conf.local</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root <span class=\"token builtin class-name\">bind</span>  <span class=\"token number\">219</span> Apr  <span class=\"token number\">7</span> 06:00 named.conf.options</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> <span class=\"token builtin class-name\">bind</span> <span class=\"token builtin class-name\">bind</span>  <span class=\"token number\">100</span> Apr  <span class=\"token number\">7</span> 05:55 rndc.key</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">1317</span> Mar <span class=\"token number\">14</span> <span class=\"token number\">14</span>:25 zones.rfc1918</pre></td></tr></table></figure><p>在这里，文件 &quot;db.venus.hmv&quot; 立即引起了您的注意。如果您仔细查看内容，您会找到下一级的密码。</p>\n<h2 id=\"0x50\"><a class=\"anchor\" href=\"#0x50\">#</a> 0x50</h2>\n<blockquote>\n<p>MIssion: The password of maria is somewhere…</p>\n</blockquote>\n<p>用户 Maria 的密码以及最后一级的密码在某处。任务文本表明我们已经在某个地方使用了 Maria 的密码，这是真的，但与你想象的不同……</p>\n",
            "tags": [
                "Linux",
                "CTF",
                "打靶",
                "hackMyVM"
            ]
        },
        {
            "id": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-4-5/",
            "url": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-4-5/",
            "title": "HackMyVM Venus Walkthrough 3/5",
            "date_published": "2022-11-07T19:00:00.000Z",
            "content_html": "<h1 id=\"hackmyvm-venus-walkthrough-45\"><a class=\"anchor\" href=\"#hackmyvm-venus-walkthrough-45\">#</a> HackMyVM Venus Walkthrough 4/5</h1>\n<h2 id=\"0x31\"><a class=\"anchor\" href=\"#0x31\">#</a> 0x31</h2>\n<blockquote>\n<p>Mission: The user veronica visits a lot <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdC93YWl0aW5nLnBocA==\">http://localhost/waiting.php</span></p>\n</blockquote>\n<p>根据任务文本，Veronica 经常访问 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdC93YWl0aW5nLnBocA==\">http://localhost/waiting.php</span> 页面。<br />\n让我们使用命令行工具 &quot;curl&quot; 来看看它背后是什么：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost/waiting.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Im waiting <span class=\"token keyword\">for</span> the user-agent PARADISE.</pre></td></tr></table></figure><p>服务器告诉我们它正在等待带有用户代理字符串 &quot;PARADISE&quot; 的用户。使用参数 -A 我们可以指示 <code>curl</code>  通过请求传递适当的用户代理：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-A</span> PARADISE http://localhost/waiting.php</pre></td></tr></table></figure><p>作为响应，服务器现在提供下一级的密码。</p>\n<h2 id=\"0x32\"><a class=\"anchor\" href=\"#0x32\">#</a> 0x32</h2>\n<blockquote>\n<p>Mission: The user veronica uses a lot the password from lana, so she created an alias.</p>\n</blockquote>\n<p>Veronica 经常使用 Lana 的密码，因此她为其创建了一个别名。由于在隐藏文件 '.bashrc' 中创建了一个别名，让我们看看这个文件是否存在：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root     veronica <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root     root     <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> veronica veronica  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> veronica veronica <span class=\"token number\">3559</span> Apr  <span class=\"token number\">7</span> 06:00 .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> veronica veronica  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root     veronica   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root     veronica  <span class=\"token number\">228</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr></table></figure><p>文件 '.bashrc' 存在。现在我们使用  <code>grep</code>  命令搜索此文件中出现的字符串 &quot;lana&quot;：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> .bashrc <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> lana</pre></td></tr></table></figure><p>这样我们就有了 0x33 的密码。</p>\n<h2 id=\"0x33\"><a class=\"anchor\" href=\"#0x33\">#</a> 0x33</h2>\n<blockquote>\n<p>Mission: The user noa loves to compress her things.</p>\n</blockquote>\n<p>由于 Noa 喜欢压缩她的东西，我们先来看看我们可以找到哪些文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>la <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root lana  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root root  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> lana lana   <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> lana lana  <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> lana lana   <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root lana    <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root lana   <span class=\"token number\">161</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root lana <span class=\"token number\">10240</span> Apr  <span class=\"token number\">7</span> 06:00 zip.gz</pre></td></tr></table></figure><p>这里的文件 &quot;zip.gz&quot; 特别引人注目。使用 file 命令我们可以找出它是什么类型的文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">file</span> zip.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>zip.gz: POSIX <span class=\"token function\">tar</span> archive <span class=\"token punctuation\">(</span>GNU<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>正如预期的那样，这是一个 tar 存档。由于我们在当前目录中只有读取权限，我们在 '/tmp' 文件夹中创建一个新目录并直接在那里解压存档：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> /tmp/zip</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> zip.gz <span class=\"token parameter variable\">-C</span> /tmp/zip</pre></td></tr></table></figure><p>让我们看看现在新创建的目录中有什么：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span> /tmp/zip</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-xr-x  <span class=\"token number\">3</span> lana lana  <span class=\"token number\">60</span> Apr <span class=\"token number\">27</span> 06:36 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-x-wx <span class=\"token number\">12</span> root root <span class=\"token number\">380</span> Apr <span class=\"token number\">27</span> 06:33 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>drwxr-xr-x  <span class=\"token number\">3</span> lana lana  <span class=\"token number\">60</span> Apr <span class=\"token number\">27</span> 06:36 pwned</pre></td></tr></table></figure><p>已经创建了一个新目录 &quot;pwned&quot;。那里有什么？</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span> /tmp/zip/pwned</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-xr-x <span class=\"token number\">3</span> lana lana <span class=\"token number\">60</span> Apr <span class=\"token number\">27</span> 06:36 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">3</span> lana lana <span class=\"token number\">60</span> Apr <span class=\"token number\">27</span> 06:36 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>drwxr-xr-x <span class=\"token number\">2</span> lana lana <span class=\"token number\">60</span> Apr <span class=\"token number\">27</span> 06:36 lana</pre></td></tr></table></figure><p>另一个目录。这一次的名字是 'lana'。然后我们也进去看看：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span> /tmp/zip/pwned/lana</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-xr-x <span class=\"token number\">2</span> lana lana <span class=\"token number\">60</span> Apr <span class=\"token number\">27</span> 06:36 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">3</span> lana lana <span class=\"token number\">60</span> Apr <span class=\"token number\">27</span> 06:36 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> lana lana <span class=\"token number\">16</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token function\">zip</span></pre></td></tr></table></figure><p>在这里，我们找到了一个名为 &quot;zip&quot; 的文件。使用 cat 我们输出文件的内容：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /tmp/zip/pwned/lana/zip</pre></td></tr></table></figure><p>这样我们就有了下一级的密码。</p>\n<h2 id=\"0x34\"><a class=\"anchor\" href=\"#0x34\">#</a> 0x34</h2>\n<blockquote>\n<p>Mission: The password of maia is surrounded by trash</p>\n</blockquote>\n<p>根据提示，maia 的密码被 trash 包围。让我们看看我们可以找到什么样的文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>la <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> noa  noa   <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> noa  noa  <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> noa  noa   <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root noa    <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root noa   <span class=\"token number\">159</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root noa  <span class=\"token number\">3818</span> Apr  <span class=\"token number\">7</span> 06:00 trash</pre></td></tr></table></figure><p>有一个名为 &quot;trash&quot; 的可疑文件。使用 <code>file</code>  命令我们可以找出它是什么类型的文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">file</span> trash</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>trash: PGP Secret Key -</pre></td></tr></table></figure><p>所以它是一个 PGP 密钥。你不希望在那里找到字符串。所以我们尝试这样做：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>strings trash</pre></td></tr></table></figure><p>作为对这一大胆尝试的奖励，我们获得了下一级的密码。</p>\n<h2 id=\"0x35\"><a class=\"anchor\" href=\"#0x35\">#</a> 0x35</h2>\n<blockquote>\n<p>Mission: The user gloria has forgotten the last 2 characters of her password … They only remember that they were 2 lowercase letters.</p>\n</blockquote>\n<p>在这个级别中，目标是暴力破解密码的最后两位数字以进入下一个级别。我们还得到有用的提示，它是两个小写字母的问题。因此，我们有 26×26 种可能的组合。</p>\n<p>首先我们打印出密码的已知部分：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root maia <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> maia maia  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> maia maia <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> maia maia  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root maia   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root maia   <span class=\"token number\">16</span> Apr  <span class=\"token number\">7</span> 06:00 forget</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root maia  <span class=\"token number\">317</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">cat</span> forget</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>v7xUVE2e5bjUc??</pre></td></tr></table></figure><p>在第二步中，我们编写了一个小的 Python 脚本，它将所有可能的组合写入本地文件 &quot;pass.txt&quot;：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"v7xUVE2e5bjUc\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>lower <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_lowercase</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pass.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> password<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> lower<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> lower<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      password<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>prefix<span class=\"token operator\">+</span>i<span class=\"token operator\">+</span>j<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>有了这个文件和命令行工具 <code>hydra</code> ，我们现在开始暴力攻击：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> gloria <span class=\"token parameter variable\">-P</span> pass.txt ssh://venus.hackmyvm.eu:5000</pre></td></tr></table></figure><p>由于可能的组合数量相对较少（最多 676 次尝试）， <code>hydra</code>  因此可以相当快地为我们提供下一个级别的密码。</p>\n<h2 id=\"0x36\"><a class=\"anchor\" href=\"#0x36\">#</a> 0x36</h2>\n<blockquote>\n<p>Mission: User alora likes drawings, that's why she saved her password as …</p>\n</blockquote>\n<p>所以 alora 喜欢画画，显然她的密码也是这样保存的。让我们看看我们可以找到哪些文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root   gloria <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root   root   <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> gloria gloria  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> gloria gloria <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> gloria gloria  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root   gloria   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root   gloria <span class=\"token number\">1713</span> Apr  <span class=\"token number\">7</span> 06:00 image</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root   gloria  <span class=\"token number\">222</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">file</span> image</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>image: ASCII text</pre></td></tr></table></figure><p>有一个名为 &quot;image&quot; 的文件，但如果我们查看它是什么类型的文件，我们会发现它是一个文本文件。那么我们来看看内容：</p>\n<pre><code>cat image\n</code></pre>\n<p>这是一个二维码。试图用手机扫描它，但它不起作用。创建一个小的 Python 脚本来让 QR 码更 &quot;可读&quot;（当然，你也可以使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nY2hxLmdpdGh1Yi5pby9DeWJlckNoZWYv\"> CyberChef</span> 中的功能） ：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> img<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  lines <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2588</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>优化后手机能认出了这个二维码，并显示了密码。</p>\n<h2 id=\"0x37\"><a class=\"anchor\" href=\"#0x37\">#</a> 0x37</h2>\n<blockquote>\n<p>Mission: User Julie has created an iso with her password.</p>\n</blockquote>\n<p>下一级的密码在 ISO 映像中</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  alora   <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root    <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> alora alora    <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> alora alora   <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> alora alora    <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  alora     <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  alora    <span class=\"token number\">172</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  alora <span class=\"token number\">360448</span> Apr  <span class=\"token number\">7</span> 06:00 music.iso</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">file</span> music.iso</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>music.iso: ISO <span class=\"token number\">9660</span> CD-ROM filesystem data <span class=\"token string\">'CDROM'</span></pre></td></tr></table></figure><p>首先，我们将文件 &quot;music.iso&quot; 下载 scp 到当前目录：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">scp</span> <span class=\"token parameter variable\">-P</span> <span class=\"token number\">5000</span> alora@venus.hackmyvm.eu:/pwned/alora/music.iso ./</pre></td></tr></table></figure><p>现在我们在挂载 ISO 文件的 &quot;/media&quot; 文件夹中创建一个名为 &quot;iso&quot; 的新目录：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /media/iso</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> <span class=\"token parameter variable\">-o</span> loop ./music.iso /media/iso</pre></td></tr></table></figure><p>现在我们显示这个目录的内容：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span> /media/iso</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-r--r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">208</span> Apr  <span class=\"token number\">7</span> 07:00 music.zip</pre></td></tr></table></figure><p>将文件解压缩到当前目录中：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">unzip</span> music.zip <span class=\"token parameter variable\">-d</span> ./</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Archive:  music.zip</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> extracting: pwned/alora/music.txt</pre></td></tr></table></figure><p>现在我们可以查看 'pwned/alora/music.txt' 的内容并获得下一级的密码。但是我们仍然需要弹出挂载的镜像并删除为它创建的目录：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> pwned/alora/music.txt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">umount</span> /media/iso</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-r</span> /mdeia/iso</pre></td></tr></table></figure><h2 id=\"0x38\"><a class=\"anchor\" href=\"#0x38\">#</a> 0x38</h2>\n<blockquote>\n<p>Mission: The user irene believes that the beauty is in the difference.</p>\n</blockquote>\n<p>这个级别是关于比较两个文件并找出两个文件的差异。那么让我们先看看我们有哪些文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  julie <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> julie julie  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> julie julie <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> julie julie  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  julie <span class=\"token number\">4802</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token number\">1</span>.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  julie <span class=\"token number\">4802</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token number\">2</span>.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  julie   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  julie  <span class=\"token number\">192</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr></table></figure><p>很明显，我们应该比较文件 &quot;1.txt&quot; 和 &quot;2.txt&quot;。幸运的是，Linux 提供了一个命令行工具来实现这个目的：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">diff</span> <span class=\"token number\">1</span>.txt <span class=\"token number\">2</span>.txt</pre></td></tr></table></figure><p>该命令返回给我们两个不同的字符串。其中之一是下一级的密码。</p>\n<h2 id=\"0x39\"><a class=\"anchor\" href=\"#0x39\">#</a> 0x39</h2>\n<blockquote>\n<p>Mission: The user adela has lent her password to irene.</p>\n</blockquote>\n<p>这个有点神秘的任务文本给我们一点线索来了解这个级别的任务是什么。那么让我们先看看我们有哪些文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  irene <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> irene irene  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> irene irene <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> irene irene  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  irene   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  irene <span class=\"token number\">1679</span> Apr  <span class=\"token number\">7</span> 06:00 id_rsa.pem</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  irene  <span class=\"token number\">451</span> Apr  <span class=\"token number\">7</span> 06:00 id_rsa.pub</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  irene  <span class=\"token number\">178</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  irene  <span class=\"token number\">256</span> Apr  <span class=\"token number\">7</span> 06:00 pass.enc</pre></td></tr></table></figure><p>我们有一个公钥和一个私钥 RSA 密钥和一个文件 &quot;pass.enc&quot;。所以很明显，下一级的密码是在文件 'pass.enc' 中进行 RSA 加密的。所以我们使用该工具 openssl 使用私钥解密这个文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl rsautl <span class=\"token parameter variable\">-decrypt</span> <span class=\"token parameter variable\">-inkey</span> id_rsa.pem <span class=\"token parameter variable\">-in</span> pass.enc</pre></td></tr></table></figure><p>0x40 的密码被解密。</p>\n<h2 id=\"0x40\"><a class=\"anchor\" href=\"#0x40\">#</a> 0x40</h2>\n<blockquote>\n<p>MIssion: User sky has saved her password to something that can be listened to.</p>\n</blockquote>\n<p>这个级别的任务文本也很神秘。那么让我们先看看我们有哪些文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>la <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  adela <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 06:00 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> adela adela  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> adela adela <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> adela adela  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  adela   <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  adela  <span class=\"token number\">213</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  adela   <span class=\"token number\">44</span> Apr  <span class=\"token number\">7</span> 06:00 wtf</pre></td></tr></table></figure><p>这里的文件 &quot;wtf&quot; 引人注目。它是什么类型的文件？</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">file</span> wtf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>wtf: ASCII text</pre></td></tr></table></figure><p>所以一个文本文件。如果我们显示内容，我们应该会看到某种模式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> wtf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.--. .- .--. .- .--. .- .-. .- -<span class=\"token punctuation\">..</span> <span class=\"token punctuation\">..</span> <span class=\"token punctuation\">..</span>. <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p>摩尔斯电码，可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3JzZWNvZGUud29ybGQvaW50ZXJuYXRpb25hbC90cmFuc2xhdG9yLmh0bWw=\">https://morsecode.world/international/translator.html</span> 在线方便地进行，从而获得下一个级别的密码。</p>\n",
            "tags": [
                "Linux",
                "CTF",
                "打靶",
                "hackMyVM"
            ]
        },
        {
            "id": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-3-5/",
            "url": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-3-5/",
            "title": "HackMyVM Venus Walkthrough 3/5",
            "date_published": "2022-11-07T18:00:00.000Z",
            "content_html": "<h1 id=\"hackmyvm-venus-walkthrough-35\"><a class=\"anchor\" href=\"#hackmyvm-venus-walkthrough-35\">#</a> HackMyVM Venus Walkthrough 3/5</h1>\n<h2 id=\"0x21\"><a class=\"anchor\" href=\"#0x21\">#</a> 0x21</h2>\n<blockquote>\n<p>Mission: User eloise has saved her password in a particular way.</p>\n</blockquote>\n<p>这里，下一级的密码在文件 eloise 中。如果你做过一些 CTF 并查看文件的内容，你会很快看到数据是 Base64 编码的。那么让我们看看这个数据是什么：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> eloise <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><p>查看文件头，它看起来非常像 PDF 文件。由于我们无法在远程系统上轻松查看文件的内容，我们只需将文件 'eloise' 的 Base64 编码内容复制到剪贴板，在本地创建一个新文件 'eloise' 并将复制的数据粘贴到那里.</p>\n<p>然后我们重复我们已经在远程系统上执行的过程，但将输出重定向到 &quot;eloise.pdf&quot; 文件：</p>\n<pre><code>cat eloise | base64 -d &gt; eloise.pdf\n</code></pre>\n<p>PDF 包含下一级的密码</p>\n<h2 id=\"0x22\"><a class=\"anchor\" href=\"#0x22\">#</a> 0x22</h2>\n<blockquote>\n<p>Mission: User lucia has been creative in saving her password.</p>\n</blockquote>\n<p>Lucia 创造性地将她的密码存储在文件 hi. 让我们看看文件中的内容：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> hi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>00000000: <span class=\"token number\">7576</span> 4d77 <span class=\"token number\">4644</span> <span class=\"token number\">5172</span> <span class=\"token number\">5157</span> 504d <span class=\"token number\">6547</span> 500a</pre></td></tr></table></figure><p>这看起来很像十六进制转储。幸运的是，我们可以使用 Linux 命令行工具将十六进制转储转换回：</p>\n<p>cat hi | xxd -r<br />\n 下一级别的密码就在您的屏幕上.</p>\n<h2 id=\"0x23\"><a class=\"anchor\" href=\"#0x23\">#</a> 0x23</h2>\n<blockquote>\n<p>Mission: The user isabel has left her password in a file in the /etc/xdg folder but she does not remember the name, however she has dict.txt that can help her to remember.</p>\n</blockquote>\n<p>要获取 isabel 的密码，我们需要在目录 '/etc/xdg' 中找到一个文件，但我们不知道它的名称。但是我们知道文件名在文件 'dict.txt' 中。在这里，bash 脚本再次可以帮助我们：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token environment constant\">IFS</span> <span class=\"token operator\">=</span> <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-r</span> line<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">cat</span> /etc/xdg/<span class=\"token variable\">$line</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> dict.txt <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr></table></figure><p>我们逐行读取文件 'dict.txt' 并尝试输出对应的文件 cat. 我们将错误消息重定向到 &quot;/dev/null&quot;. 这样我们就得到了下一级的密码.</p>\n<h2 id=\"0x24\"><a class=\"anchor\" href=\"#0x24\">#</a> 0x24</h2>\n<blockquote>\n<p>Mission: The password of the user freya is the only string that is not repeated in different.txt</p>\n</blockquote>\n<p>为了获取密码，我们需要查看 &quot;different.txt&quot; 文件并找到唯一不重复的行。幸运的是，有一个命令行工具 <code>uniq</code>  正是为此目的而调用的：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">uniq</span> <span class=\"token parameter variable\">-u</span> different.txt</pre></td></tr></table></figure><p>使用 -u 选项，我们指定输出不重复的行.</p>\n<h2 id=\"0x25\"><a class=\"anchor\" href=\"#0x25\">#</a> 0x25</h2>\n<blockquote>\n<p>Mission: User alexa puts her password in a .txt file in /free every minute and then deletes it.</p>\n</blockquote>\n<p>每分钟都会在包含密码的文件夹 &quot;/free&quot; 中创建一个文本文件，并在不久之后将其删除.</p>\n<p>也就是条件竞争漏洞.</p>\n<p>使用一个小的 bash 脚本，这个级别很快就解决了.</p>\n<p>首先我们在 &quot;/tmp&quot; 文件夹中创建一个目录，因为我们在那里有写权限：</p>\n<pre><code>mkdir /tmp/free\n</code></pre>\n<p>查看目录 &quot;/free&quot;, 并将目录中的所有文件复制到 &quot;/tmp/free&quot;. 之后，我们就有了时间来查看我们的脚本发现了什么：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">end</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span>SECONDS<span class=\"token operator\">+</span><span class=\"token number\">60</span><span class=\"token variable\">))</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token environment constant\">$SECONDS</span> <span class=\"token parameter variable\">-lt</span> <span class=\"token variable\">$end</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">cp</span> <span class=\"token parameter variable\">-RT</span> /free /tmp/free<span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ls</span> /tmp/free</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>beer.txt</pre></td></tr></table></figure><p>所以下一级的密码在文件 '/tmp/free/beer.txt' 中.</p>\n<h2 id=\"0x26\"><a class=\"anchor\" href=\"#0x26\">#</a> 0x26</h2>\n<blockquote>\n<p>Mission: The password of the user ariel is online! (HTTP)</p>\n</blockquote>\n<p>这个级别又很简单。我们只需要向 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdA==\">http://localhost</span> 发送一个请求 curl：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> http://localhost</pre></td></tr></table></figure><h2 id=\"0x27\"><a class=\"anchor\" href=\"#0x27\">#</a> 0x27</h2>\n<blockquote>\n<p>Mission: Seems that ariel dont save the password for lola, but there is a temporal file.</p>\n</blockquote>\n<p>首先，查看主目录中有哪些文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x--- <span class=\"token number\">2</span> root  ariel  <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:56.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root  root   <span class=\"token number\">4096</span> Apr  <span class=\"token number\">7</span> 05:55<span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> ariel ariel   <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span>.bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> ariel ariel  <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span>.bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  ariel <span class=\"token number\">12288</span> Apr  <span class=\"token number\">7</span> 05:56.goas.swp</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> ariel ariel   <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span>.profile</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  ariel    <span class=\"token number\">31</span> Apr  <span class=\"token number\">7</span> 05:55 flagz.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r----- <span class=\"token number\">1</span> root  ariel   <span class=\"token number\">254</span> Apr  <span class=\"token number\">7</span> 05:55 mission.txt</pre></td></tr></table></figure><p>任务文本提到了一个临时文件。这可能是 &quot;.goas.swp&quot; 文件.<br />\n'.swp' 文件由文本编辑器 VIM 创建作为备份.</p>\n<p>要恢复文件，我们创建一个临时目录 'tmp/vim' 并启动 VIM：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> /tmp/vim</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">vim</span> goas</pre></td></tr></table></figure><p>VIM 询问我们要如何打开文件。我们决定使用 (R) ecover 选项。接下来我们被问到应该恢复哪个文件。我们选择列表中的最后一个文件 (7).</p>\n<p>我们的密码文件已恢复。我们现在使用命令将文件保存 <code>:w /tmp/vim/goas</code>  在我们之前创建的临时目录中，并使用 VIM 命令退出  <code>:q!</code></p>\n<p>现在我们将新创建的文件的内容复制到剪贴板中，并在我们的计算机上本地创建一个新文件 &quot;lola.txt&quot;, 我们将剪贴板的内容粘贴到该文件中.</p>\n<p>现在我们可以方便 hydra 地尝试使用哪个密码对用户 &quot;lola&quot; 有效：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> lola <span class=\"token parameter variable\">-P</span> lola.txt ssh://venus.hackmyvm.eu:5000</pre></td></tr></table></figure><h2 id=\"0x28\"><a class=\"anchor\" href=\"#0x28\">#</a> 0x28</h2>\n<blockquote>\n<p>Mission: The user celeste has left a list of names of possible .html pages where to find her password.</p>\n</blockquote>\n<p>这里我们必须 curl 再次向 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdA==\">http://localhost</span> 发送请求，但这次我们必须将请求发送到特定的 HTML 页面.</p>\n<p>由于手动浏览文件 'pages.txt' 的每一行需要很长时间，我们再次编写一个小的 bash 脚本：</p>\n<p>while IFS= read -r line; do curl &quot;<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdC8kbGluZS5odG1s\">http://localhost/$line.html</span>&quot; -sf; done &lt; pages.txt<br />\n 不久之后，我们就有了下一级的密码.</p>\n<h2 id=\"0x29\"><a class=\"anchor\" href=\"#0x29\">#</a> 0x29</h2>\n<blockquote>\n<p>Mission: The user celeste has access to mysql but for what?</p>\n</blockquote>\n<p>Celeste 可以访问 MySQL 数据库。然后让我们看一下数据库.</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysql <span class=\"token parameter variable\">-u</span> celeste <span class=\"token parameter variable\">-p</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Enter password:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>MariaDB <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> show databases<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>+--------------------+</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span> Database           <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+--------------------+</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">|</span> information_schema <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> venus              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>+--------------------+</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>MariaDB <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> use venus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>MariaDB <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> show tables<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>+-----------------+</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">|</span> Tables_in_venus <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>+-----------------+</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">|</span> people          <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>+-----------------+</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>MariaDB <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token keyword\">select</span> * from people<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>使用最后一个命令，我们得到了 &quot;people&quot; 表的内容.</p>\n<p>仔细看一下表格，因为那里不仅隐藏了下一级的密码，还隐藏了一个隐藏的标志.</p>\n<p>要知道要查找哪个用户密码，值得查看文件 &quot;/etc/passwd&quot;. 您会在当前级别的用户下找到下一个级别的用户。有了这些信息，很容易找到下一个密码.</p>\n<h2 id=\"0x30\"><a class=\"anchor\" href=\"#0x30\">#</a> 0x30</h2>\n<blockquote>\n<p>MIssion: The user kira is hidding something in <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdC9tZXRob2QucGhw\">http://localhost/method.php</span></p>\n</blockquote>\n<p>您可以通过使用特定 HTTP 方法向 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdC9tZXRob2QucGhw\">http://localhost/method.php</span> 发送请求来获取用户 kira 的密码，从而获得下一个级别的密码.</p>\n<p>关于哪些方法可用的信息可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZGUvZG9jcy9XZWIvSFRUUC9NZXRob2Rz\">https://developer.mozilla.org/de/docs/Web/HTTP/Methods</span>  找到</p>\n<p>这里有一个 tips：尝试所有方法，也许你会发现一个隐藏的标志😉</p>\n<p>只需替换 '???' 使用您要使用的方法.</p>\n<p>注意，HEAD 不适用于此。为此，您可以简单地使用 <code>curl -I http://localhost/method.php.</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> ??? http://localhost/method.php</pre></td></tr></table></figure>",
            "tags": [
                "Linux",
                "CTF",
                "打靶",
                "hackMyVM"
            ]
        },
        {
            "id": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-2-5/",
            "url": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-2-5/",
            "title": "HackMyVM Venus Walkthrough 2/5",
            "date_published": "2022-11-07T17:00:00.000Z",
            "content_html": "<h1 id=\"hackmyvm-venus-walkthrough-25\"><a class=\"anchor\" href=\"#hackmyvm-venus-walkthrough-25\">#</a> HackMyVM Venus Walkthrough 2/5</h1>\n<h2 id=\"0x11\"><a class=\"anchor\" href=\"#0x11\">#</a> 0x11</h2>\n<blockquote>\n<p>Mission: The password of the user lucy is in the line that ends with 0JuAZ (these last 5 characters are not part of her password)</p>\n</blockquote>\n<p>Lucy 的密码在文件 &quot;end&quot; 中，并在以 &quot;0JuAZ&quot; 结尾的行中。要获取密码，我们只需使用正则表达式 0JuAZ<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">‘</mi><mi>c</mi><mi>a</mi><mi>t</mi><mi mathvariant=\"normal\">‘</mi><mtext>打</mtext><msup><mtext>印</mtext><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>e</mi><mi>n</mi><msup><mi>d</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mtext>的内容并通过管道将它们传递给</mtext><mi mathvariant=\"normal\">‘</mi><mi>g</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi mathvariant=\"normal\">‘</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">, `cat` 打印 &#x27;end&#x27; 的内容并通过管道将它们传递给`grep` ,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.946332em;vertical-align:-0.19444em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">‘</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">‘</span><span class=\"mord cjk_fallback\">打</span><span class=\"mord\"><span class=\"mord cjk_fallback\">印</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">内</span><span class=\"mord cjk_fallback\">容</span><span class=\"mord cjk_fallback\">并</span><span class=\"mord cjk_fallback\">通</span><span class=\"mord cjk_fallback\">过</span><span class=\"mord cjk_fallback\">管</span><span class=\"mord cjk_fallback\">道</span><span class=\"mord cjk_fallback\">将</span><span class=\"mord cjk_fallback\">它</span><span class=\"mord cjk_fallback\">们</span><span class=\"mord cjk_fallback\">传</span><span class=\"mord cjk_fallback\">递</span><span class=\"mord cjk_fallback\">给</span><span class=\"mord\">‘</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">‘</span><span class=\"mpunct\">,</span></span></span></span> 符号表示我们正在寻找以 $ 符号之前的字符结尾的字符串。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> end <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> 0JuAZ$</pre></td></tr></table></figure><p>现在您拥有下一个级别的凭据。但不要忘记字符串 '0JuAZ' 不是密码的一部分。</p>\n<h2 id=\"0x12\"><a class=\"anchor\" href=\"#0x12\">#</a> 0x12</h2>\n<blockquote>\n<p>Mission: The password of the user elena is between the characters fu and ck</p>\n</blockquote>\n<p>所以下一级的密码在 'fu' 和 'ck' 之间。非常有意思。同样， <code>grep</code>  与正则表达式一起帮助我们。然后让我们看看正则表达式可能是什么样子：</p>\n<p>我们正在寻找一个以 'fu' 开头的字符串。表达式为  <code>^fu</code> <br />\n 接下来是任意数量的任意字符。这个表达式是  <code>.*</code> <br />\n 字符串应以 'ck' 结尾，因此表达式为  <code>ck$</code> <br />\n 一切看起来像这样：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> file.yo <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> ^fu.*ck$</pre></td></tr></table></figure><p>现在您有了下一级的密码。请记住，开头的 &quot;fu&quot; 和结尾的 &quot;ck&quot; 不是密码的一部分。</p>\n<h2 id=\"0x013\"><a class=\"anchor\" href=\"#0x013\">#</a> 0x013</h2>\n<blockquote>\n<p>Mission: The user alice has her password is in an environment variable.</p>\n</blockquote>\n<p>要获得下一级的密码，我们只需要打印环境变量即可。PASS 变量包含密码。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">printenv</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> PASS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>或</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> PASS</pre></td></tr></table></figure><h2 id=\"0x014\"><a class=\"anchor\" href=\"#0x014\">#</a> 0x014</h2>\n<blockquote>\n<p>Mission: The admin has left the password of the user anna as a comment in the file passwd.</p>\n</blockquote>\n<p>所以密码在文件 /etc/passwd 中。由于文件比较长，我们看一下当前用户所在的行😉</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /etc/passwd <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> alice</pre></td></tr></table></figure><h2 id=\"0x15\"><a class=\"anchor\" href=\"#0x15\">#</a> 0x15</h2>\n<blockquote>\n<p>Mission: Maybe sudo can help you to be natalia.</p>\n</blockquote>\n<p><code>sudo</code>  可以帮助我们根据任务描述成为 natalia。然后让我们尝试使用 -u 选项并将 natalia 指定为用户。我们还想 <code>bash</code>  作为命令运行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-u</span> natalia /bin/bash</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">whoami</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>natalia</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~</pre></td></tr></table></figure><p>嗯，效果很好。</p>\n<h2 id=\"0x16\"><a class=\"anchor\" href=\"#0x16\">#</a> 0x16</h2>\n<blockquote>\n<p>Mission: The password of user eva is encoded in the base64.txt file.</p>\n</blockquote>\n<p>下一级的密码在文件 &quot;base64.txt&quot; 中并已编码。文件名表明密码是  <code>base64</code>  编码的，因此我们使用 <code>base64</code>  带有 -d 选项的命令对其进行解码。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> base64.txt <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><h2 id=\"0x17\"><a class=\"anchor\" href=\"#0x17\">#</a> 0x17</h2>\n<blockquote>\n<p>Mission: The password of the clara user is found in a file modified on May 1, 1968.</p>\n</blockquote>\n<p>所以密码在 1968 年 5 月 1 日更改的文件中。</p>\n<p>在这里，我们可以使用带有 -newermt 选项的  <code>find </code> 命令。但是，由于 Linux 使用 Epoch Unix 时间戳，因为它们从 01/01/1970 开始，所以我们无法搜索在 1968 年更改的文件。相反，我们显示在 01/02/1970 之前更改的所有文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> f <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-newermt</span> <span class=\"token number\">1970</span>-01-02 <span class=\"token parameter variable\">-ls</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">403708</span>      <span class=\"token number\">4</span> -rw-r--r--   <span class=\"token number\">1</span> root     root           <span class=\"token number\">16</span> Jan  <span class=\"token number\">1</span>  <span class=\"token number\">1970</span> /usr/lib/cmdo</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">cat</span> /usr/lib/cmdo</pre></td></tr></table></figure><h2 id=\"0x18\"><a class=\"anchor\" href=\"#0x18\">#</a> 0x18</h2>\n<blockquote>\n<p>Mission: The password of user frida is in the password-protected zip (rockyou.txt can help you).</p>\n</blockquote>\n<p>这个级别有点复杂。首先，我们必须将受密码保护的 zip 存档下载到我们的 PC，然后使用 JohnTheRipper 破解它。JohnTheRipper 和密码文件 rockyou.txt 都包含在 Kali 中。</p>\n<p>作为第一步，我们使用命令行工具 <code>sftp</code>  (或 <code>scp</code> ) 将存档下载到我们的 PC。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sftp</span> <span class=\"token parameter variable\">-P</span> <span class=\"token number\">5000</span> clara@venus.hackmyvm.eu</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>get protected.zip </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Fetching /pwned/clara/protected.zip to protected.zip</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/pwned/clara/protected.zip</pre></td></tr></table></figure><p>接下来，我们需要从 JohnTheRipper 可以使用的 zip 存档中创建一个哈希：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>zip2john protected.zip <span class=\"token operator\">></span> hash.txt</pre></td></tr></table></figure><p>现在我们有了哈希文件，我们可以使用 JohnTheRipper 和 rockyou.txt 词表来破解密码：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>john <span class=\"token parameter variable\">--format</span><span class=\"token operator\">=</span>PKZIP <span class=\"token parameter variable\">--wordlist</span><span class=\"token operator\">=</span>/usr/share/wordlists/rockyou.txt hash.txt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Using default input encoding: UTF-8</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Loaded <span class=\"token number\">1</span> password <span class=\"token builtin class-name\">hash</span> <span class=\"token punctuation\">(</span>PKZIP <span class=\"token punctuation\">[</span><span class=\"token number\">32</span>/64<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Will run <span class=\"token number\">4</span> OpenMP threads</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Press <span class=\"token string\">'q'</span> or Ctrl-C to abort, almost any other key <span class=\"token keyword\">for</span> status</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pass123          <span class=\"token punctuation\">(</span>protected.zip/pwned/clara/protected.txt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>1g <span class=\"token number\">0</span>:00:00:00 DONE <span class=\"token punctuation\">(</span><span class=\"token number\">2022</span>-04-02 <span class=\"token number\">18</span>:50<span class=\"token punctuation\">)</span> <span class=\"token number\">25</span>.00g/s 204800p/s 204800c/s 204800C/s <span class=\"token number\">123456</span><span class=\"token punctuation\">..</span>whitetiger</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Use the <span class=\"token string\">\"--show\"</span> option to display all of the cracked passwords reliably</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Session completed</pre></td></tr></table></figure><p>zip 存档的密码是 pass123—— 我们现在可以解压存档并输出密码：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">unzip</span> protected.zip </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Archive:  protected.zip</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>protected.zip<span class=\"token punctuation\">]</span> pwned/clara/protected.txt password:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> extracting: pwned/clara/protected.txt</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">cat</span> pwned/clara/protected.txt</pre></td></tr></table></figure><h2 id=\"0x19\"><a class=\"anchor\" href=\"#0x19\">#</a> 0x19</h2>\n<blockquote>\n<p>Mission: The password of eliza is the only string that is repeated (unsorted) in repeated.txt.</p>\n</blockquote>\n<p>可以使用单个命令再次解决此级别。密码是在指定文件中多次出现的字符串。要过滤掉它，我们可以使用 <code>uniq</code>  带有 -d 选项的命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">uniq</span> <span class=\"token parameter variable\">-d</span> repeated.txt</pre></td></tr></table></figure><h2 id=\"0x20\"><a class=\"anchor\" href=\"#0x20\">#</a> 0x20</h2>\n<blockquote>\n<p>MIssion: The user iris has left me her key.</p>\n</blockquote>\n<p>在这个级别，用户  <code>iris</code>  好心地留下了一个 ssh-key。<br />\n所以首先显示所有文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x---  <span class=\"token number\">2</span> root  eliza <span class=\"token number\">4096</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:48 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">55</span> root  root  <span class=\"token number\">4096</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r--r--  <span class=\"token number\">1</span> eliza eliza  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r--  <span class=\"token number\">1</span> eliza eliza <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r-----  <span class=\"token number\">1</span> root  eliza <span class=\"token number\">2602</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:48 .iris_key</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r--r--  <span class=\"token number\">1</span> eliza eliza  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r-----  <span class=\"token number\">1</span> root  eliza   <span class=\"token number\">31</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 flagz.txt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r-----  <span class=\"token number\">1</span> root  eliza  <span class=\"token number\">143</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 mission.txt</pre></td></tr></table></figure><p>文件 &quot;.iris_key&quot; 看起来很有希望：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-i</span> .iris_key iris@localhost</pre></td></tr></table></figure>",
            "tags": [
                "Linux",
                "CTF",
                "打靶",
                "hackMyVM"
            ]
        },
        {
            "id": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-1-5/",
            "url": "http://zhyzhyzhy.cn/2022/11/08/hackmyvm-venus-walkthrough-1-5/",
            "title": "HackMyVM Venus Walkthrough 1/5",
            "date_published": "2022-11-07T16:00:00.000Z",
            "content_html": "<h1 id=\"hackmyvm-venus-walkthrough-15\"><a class=\"anchor\" href=\"#hackmyvm-venus-walkthrough-15\">#</a> HackMyVM Venus Walkthrough 1/5</h1>\n<p>上篇已经介绍过了 HackMyVM 平台，那么让我们开始进行 LAB 吧</p>\n<p>HackMyVM 的 Venus Lab 面向对 Linux 控制台没有太多经验的初学者。但是，对于该领域的绝对新手来说，还有一些任务可能有点棘手。</p>\n<h2 id=\"0x01\"><a class=\"anchor\" href=\"#0x01\">#</a> 0x01</h2>\n<blockquote>\n<p>Mission: User sophia has saved her password in a hidden file in this folder. Find it and log in as sophia.</p>\n</blockquote>\n<p>为了显示目录中的所有文件，Linux 提供了 <code>ls</code>  命令。但是，此命令默认不显示隐藏文件。但是，如果使用 -a 选项调用该命令，也会显示隐藏文件。-l 选项将结果打印为列表。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>drwxr-x---  <span class=\"token number\">2</span> root   hacker <span class=\"token number\">4096</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:50 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>drwxr-xr-x <span class=\"token number\">55</span> root   root   <span class=\"token number\">4096</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-rw-r-----  <span class=\"token number\">1</span> root   hacker   <span class=\"token number\">31</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:50 <span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-rw-r--r--  <span class=\"token number\">1</span> hacker hacker  <span class=\"token number\">220</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bash_logout</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rw-r--r--  <span class=\"token number\">1</span> hacker hacker <span class=\"token number\">3526</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .bashrc</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r-----  <span class=\"token number\">1</span> root   hacker   <span class=\"token number\">16</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 .myhiddenpazz</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-rw-r--r--  <span class=\"token number\">1</span> hacker hacker  <span class=\"token number\">807</span> Aug  <span class=\"token number\">4</span>  <span class=\"token number\">2021</span> .profile</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-rw-r-----  <span class=\"token number\">1</span> root   hacker  <span class=\"token number\">287</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 mission.txt</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>-rw-r-----  <span class=\"token number\">1</span> root   hacker <span class=\"token number\">2542</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 readme.txt</pre></td></tr></table></figure><p>现在，当前目录中的所有文件都在此处列出。开头带点的文件是隐藏文件，不带 -a 的 ls 不会出现。</p>\n<p>现在要显示文件 &quot;.myhiddenpazz&quot; 的内容，我们使用 <code>cat</code>  命令。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> .myhiddenpazz</pre></td></tr></table></figure><p>这里我们有用户 &quot;sophia&quot; 的密码。<br />\n要更改用户，只需使用 <code>su</code>  命令后跟要更改的用户名。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">su</span> sophia</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Password:</pre></td></tr></table></figure><p>系统将提示您输入所需用户的密码。如果一切正常，您将以所需用户身份登录，并且可以使用 <code>cd ~</code> . 在这里你会找到一个名为 &quot;flagz.txt&quot; 的文件，你可以在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbXl2bS5ldS92ZW51cy9mbGFnei5waHA=\"> https://hackmyvm.eu/venus/flagz.php</span> 输入 flag. 然后，您可以在当前主目录的 &quot;mission.txt&quot; 文件中找到下一级的任务描述。</p>\n<p>此外，用户 hacker 的主目录中还有另一个隐藏文件。记住隐藏文件以点开头...... 在该文件中，您会发现一个额外的隐藏标志，您可以在 <span class=\"exturl\" data-url=\"aHR0cDovL2hhY2tteXZtLmV1\">hackmyvm.eu</span> 的 &quot;flagz&quot; 一侧输入它！</p>\n<p>我已经比较详细地描述了第一级。以下级别中简化此问题。如果有任何不清楚的地方，可以使用评论功能向我指出。</p>\n<h2 id=\"0x02\"><a class=\"anchor\" href=\"#0x02\">#</a> 0x02</h2>\n<blockquote>\n<p>Mission: The user angela has saved her password in a file but she does not remember where … she only remembers that the file was called whereismypazz.txt</p>\n</blockquote>\n<p>正如任务文本提到的，我们需要找到一个文件 &quot;whereismypazz.txt&quot;。为此，我们有 <code>find</code>  命令。这有一些有用的选项。这里我们使用 -name 选项。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"whereismypazz.txt\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/usr/share/whereismypazz.txt</pre></td></tr></table></figure><p>第一个 &quot;/&quot; 指定从头开始搜索的位置，即在根目录中。 <code>-name</code>  选项是不言自明的，'2&gt;/dev/null' 用于抑制可能的错误消息。2 是标准错误输出，使用 &gt; 重定向到 /dev/null。</p>\n<p>现在您有了包含下一个用户密码的文件。</p>\n<h2 id=\"0x03\"><a class=\"anchor\" href=\"#0x03\">#</a> 0x03</h2>\n<blockquote>\n<p>Mission: The password of the user emma is in line 4069 of the file findme.txt</p>\n</blockquote>\n<p>这里我们使用 <code>sed</code>  命令打印文件 'findme.txt' 的第 4069 行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'4069p'</span> findme.txt</pre></td></tr></table></figure><p>你有下一个密码。</p>\n<h2 id=\"0x04\"><a class=\"anchor\" href=\"#0x04\">#</a> 0x04</h2>\n<blockquote>\n<p>Mission: User mia has left her password in the file -.</p>\n</blockquote>\n<p>由于我们不能将文件名 &quot;-&quot; 传递给 <code>cat</code>  命令，因为选项以 &quot;-&quot; 为前缀，因此  <code>cat</code>  无法识别此名称，我们必须稍微欺骗一下。我们只是告诉 cat 在当前目录中查找文件。我们可以通过在文件名前加上字符串 './' 来做到这一点。所以完整的命令是</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> ./-</pre></td></tr></table></figure><h2 id=\"0x05\"><a class=\"anchor\" href=\"#0x05\">#</a> 0x05</h2>\n<blockquote>\n<p>Mission: It seems that the user camila has left her password inside a folder called hereiam</p>\n</blockquote>\n<p>在这里，我们可以将 0x01 的方法与 0x02 的方法结合使用：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"hereiam\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/opt/hereiam</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span> /opt/hereiam</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>total <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>drwxr-xr-x <span class=\"token number\">2</span> root root <span class=\"token number\">4096</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>drwxr-xr-x <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rw-r--r-- <span class=\"token number\">1</span> root root   <span class=\"token number\">16</span> Feb <span class=\"token number\">24</span> <span class=\"token number\">11</span>:47 .here</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">cat</span> /opt/hereiam/.here</pre></td></tr></table></figure><h2 id=\"0x06\"><a class=\"anchor\" href=\"#0x06\">#</a> 0x06</h2>\n<blockquote>\n<p>Mission: The user luna has left her password in a file inside the muack folder.</p>\n</blockquote>\n<p>我们可以再次使用该 <code>find</code>  命令。但是，这一次使用选项 &quot;-type f&quot; 显式搜索文件并且不输出目录。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> ./muack <span class=\"token parameter variable\">-type</span> f</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./muack/111/111/muack</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cat</span> ./muack/111/111/muack</pre></td></tr></table></figure><h2 id=\"0x07\"><a class=\"anchor\" href=\"#0x07\">#</a> 0x07</h2>\n<blockquote>\n<p>Mission: The user eleanor has left her password in a file that occupies 6969 bytes.</p>\n</blockquote>\n<p>我们可以再次使用该 <code>find</code>  命令。这次使用选项 &quot;-size&quot;，我们在文件大小后附加一个 &quot;c&quot;，否则 find 将搜索 6969 个块而不是 6969 个字节。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-size</span> 6969c <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/usr/share/man/man1/h2xs.1.gz</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/usr/share/moon.txt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">cat</span> /usr/share/moon.txt</pre></td></tr></table></figure><p><code>find</code>  找到了两个对应大小的文件。由于我们不假设密码文件被压缩，我们首先尝试输出 &quot;.txt&quot; 文件的内容，从而获取下一个用户的密码。</p>\n<h2 id=\"0x08\"><a class=\"anchor\" href=\"#0x08\">#</a> 0x08</h2>\n<blockquote>\n<p>Mission: The user victoria has left her password in a file in which the owner is the user violin.</p>\n</blockquote>\n<p>再次是该 <code>find</code>  命令的用例。这次使用 -user 选项</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-user</span> violin <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/usr/local/games/yo</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cat</span> /usr/local/games/yo</pre></td></tr></table></figure><h2 id=\"0x09\"><a class=\"anchor\" href=\"#0x09\">#</a> 0x09</h2>\n<blockquote>\n<p>Mission: The user isla has left her password in a zip file.</p>\n</blockquote>\n<p>要解压缩 zip 文件，我们需要对目标具有写权限。由于我们在当前主目录中没有写入权限，因此我们在 &quot;/tmp&quot; 文件夹中创建了一个临时文件夹。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> /tmp/1234</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">unzip</span> passw0rd.zip <span class=\"token parameter variable\">-d</span> /tmp/1234</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Archive:  passw0rd.zip</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> extracting: /tmp/1234/pwned/victoria/passw0rd.txt  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cat</span> /tmp/1234/pwned/victoria/passw0rd.txt</pre></td></tr></table></figure><h2 id=\"0x10\"><a class=\"anchor\" href=\"#0x10\">#</a> 0x10</h2>\n<blockquote>\n<p>MIssion: The password of the user violet is in the line that begins with a9HFX (these 5 characters are not part of her password.).</p>\n</blockquote>\n<p>在这里，一个新的非常重要的命令开始发挥作用， <code>grep</code>  命令。这用于搜索某些字符串或正则表达式。这里我们也使用正则表达式。我们正在寻找以 &quot;a9HFX&quot; 开头的字符串。为此，我们使用 ^ 字符，它标志着字符串的开始。我们还使用 | 字符将命令的输出重定向（又名 &quot;管道&quot;）到 cat 命令的输入 grep。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> passy <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> ^a9HFX</pre></td></tr></table></figure><p>确保密码在搜索字符串之后开始。</p>\n",
            "tags": [
                "Linux",
                "CTF",
                "打靶",
                "hackMyVM"
            ]
        },
        {
            "id": "http://zhyzhyzhy.cn/2022/10/26/hackMyVM%E6%A6%82%E8%BF%B0/",
            "url": "http://zhyzhyzhy.cn/2022/10/26/hackMyVM%E6%A6%82%E8%BF%B0/",
            "title": "hackMyVM概述",
            "date_published": "2022-10-25T16:00:00.000Z",
            "content_html": "<h1 id=\"hackmyvm概述\"><a class=\"anchor\" href=\"#hackmyvm概述\">#</a> hackmyvm 概述</h1>\n<p>hackmyvm 是一个平台，包含了大量靶机，类似于 vulnhub、hackthebox 等平台，你可以在上面下载靶机，进行渗透测试练习，非常适合热爱黑客技术或从事渗透测试的人员。</p>\n<h2 id=\"hackmyvm能玩什么\"><a class=\"anchor\" href=\"#hackmyvm能玩什么\">#</a> hackMyVM 能玩什么？</h2>\n<p>离线的，现在的 hackMyVM 具有 159 台离线靶机，你可以下载下来慢慢享受。<br />\n<img data-src=\"https://s2.loli.net/2022/10/26/FAYtVEnqrecw26x.png\" alt=\"1.png\" /><br />\n 在线的，hackMyVM 还提供了两种不同的在线靶场，你大可以什么都不用下载，来享受 hackMyVM 提供的快乐。<br />\n<img data-src=\"https://s2.loli.net/2022/10/26/Gre6QVYLU7MBRsC.png\" alt=\"2.png\" /></p>\n<p>活跃度，相比于 vulnhub 来看，hackMyVM 始终保持着活跃度，每周都会上线靶机。从下方可以看出，vulnhub 最早的更新在 2021 年十一月，而 hackMyVM 则是在不久前进行了更新。当然！你也可以上线自己的靶机供他人使用。<br />\n<img data-src=\"https://s2.loli.net/2022/10/26/WKSGhRAlwHLmvk6.png\" alt=\"4.png\" /><br />\n<img data-src=\"https://s2.loli.net/2022/10/26/fqLxjZ6sJuBgNaC.png\" alt=\"5.png\" /></p>\n<p>如果你遇到了困难，不要担心，hackMyVM 官方提供了社区聊天群，你可以在社区群中进行提问也可以来帮助他人。<br />\n<img data-src=\"https://s2.loli.net/2022/10/26/AjgtoEFwV34bPmH.png\" alt=\"3.png\" /></p>\n",
            "tags": [
                "Linux",
                "CTF",
                "打靶",
                "hackMyVM"
            ]
        }
    ]
}