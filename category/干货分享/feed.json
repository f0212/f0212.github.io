{
    "version": "https://jsonfeed.org/version/1",
    "title": "欢迎来到 fo 的网络安全小站 • All posts by \"干货分享\" category",
    "description": "欢迎来到 fo 的网络安全小站",
    "home_page_url": "http://zhyzhyzhy.cn",
    "items": [
        {
            "id": "http://zhyzhyzhy.cn/2022/10/31/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E6%8C%87%E4%BB%A4%E9%9B%86/",
            "url": "http://zhyzhyzhy.cn/2022/10/31/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E6%8C%87%E4%BB%A4%E9%9B%86/",
            "title": "汇编语言指令集",
            "date_published": "2022-10-30T17:00:00.000Z",
            "content_html": "<h1 id=\"汇编语言指令集\"><a class=\"anchor\" href=\"#汇编语言指令集\">#</a> 汇编语言指令集</h1>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>8080汇编手册数据传输指令</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>──────────────────────────────</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>它们在存贮器和寄存器、寄存器和输入输出端口之间传送数据。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>1。 通用数据传送指令。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>MOV 传送字或字节。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>MOVSX 先符号扩展，再传送。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>MOVZX 先零扩展，再传送。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PUSH 把字压入堆栈。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>POP 把字弹出堆栈。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>PUSHA 把AX，CX，DX，BX，SP，BP，SI，DI依次压入堆栈。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>POPA 把DI，SI，BP，SP，BX，DX，CX，AX依次弹出堆栈。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>PUSHAD 把EAX，ECX，EDX，EBX，ESP，EBP，ESI，EDI依次压入堆栈。</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>POPAD 把EDI，ESI，EBP，ESP，EBX，EDX，ECX，EAX依次弹出堆栈。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>BSWAP 交换32位寄存器里字节的顺序</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>XCHG 交换字或字节。( 至少有一个操作数为寄存器，段寄存器不可作为操作数)</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>CMPXCHG 比较并交换操作数。( 第二个操作数必须为累加器AL/AX/EAX )</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>XADD 先交换再累加。( 结果在第一个操作数里 )</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>XLAT 字节查表转换。</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>── BX 指向一张 256 字节的表的起点， AL 为表的索引值 (0-255，即</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>0-FFH); 返回 AL 为查表结果。 ( [BX+AL]->AL )</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>2。 输入输出端口传送指令。</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>IN I/O端口输入。 ( 语法: IN 累加器， &#123;端口号│DX&#125; )</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>OUT I/O端口输出。 ( 语法: OUT &#123;端口号│DX&#125;，累加器 )</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>输入输出端口由立即方式指定时， 其范围是 0-255; 由寄存器 DX 指定时，</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>其范围是 0-65535。</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>3。 目的地址传送指令。</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>LEA 装入有效地址。</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>例: LEA DX，string ;把偏移地址存到DX。</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>LDS 传送目标指针，把指针内容装入DS。</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>例: LDS SI，string ;把段地址:偏移地址存到DS:SI。</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>LES 传送目标指针，把指针内容装入ES。</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>例: LES DI，string ;把段地址:偏移地址存到ES:DI。</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>LFS 传送目标指针，把指针内容装入FS。</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>例: LFS DI，string ;把段地址:偏移地址存到FS:DI。</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>LGS 传送目标指针，把指针内容装入GS。</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>例: LGS DI，string ;把段地址:偏移地址存到GS:DI。</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>LSS 传送目标指针，把指针内容装入SS。</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>例: LSS DI，string ;把段地址:偏移地址存到SS:DI。</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>4。 标志传送指令。</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>LAHF 标志寄存器传送，把标志装入AH。</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>SAHF 标志寄存器传送，把AH内容装入标志寄存器。</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>PUSHF 标志入栈。</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>POPF 标志出栈。</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>PUSHD 32位标志入栈。</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>POPD 32位标志出栈。</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>二、算术运算指令</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>──────────────────────────────</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>ADD 加法。</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>ADC 带进位加法。</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>INC 加 1。</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>AAA 加法的ASCII码调整。</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>DAA 加法的十进制调整。</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>SUB 减法。</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>SBB 带借位减法。</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>DEC 减 1。</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>NEC 求反(以 0 减之)。</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>CMP 比较。(两操作数作减法，仅修改标志位，不回送结果)。</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>AAS 减法的ASCII码调整。</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>DAS 减法的十进制调整。</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>MUL 无符号乘法。</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>IMUL 整数乘法。</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>以上两条，结果回送AH和AL(字节运算)，或DX和AX(字运算)，</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>AAM 乘法的ASCII码调整。</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>DIV 无符号除法。</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>IDIV 整数除法。</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>以上两条，结果回送:</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>商回送AL，余数回送AH， (字节运算);</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>或 商回送AX，余数回送DX， (字运算)。</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>AAD 除法的ASCII码调整。</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>CBW 字节转换为字。 (把AL中字节的符号扩展到AH中去)</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>CWD 字转换为双字。 (把AX中的字的符号扩展到DX中去)</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>CWDE 字转换为双字。 (把AX中的字符号扩展到EAX中去)</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>CDQ 双字扩展。 (把EAX中的字的符号扩展到EDX中去)</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>三、逻辑运算指令</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>────────────────────────────</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>AND 与运算。</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>OR 或运算。</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>XOR 异或运算。</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>NOT 取反。</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>TEST 测试。(两操作数作与运算，仅修改标志位，不回送结果)。</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>SHL 逻辑左移。</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>SAL 算术左移。(=SHL)</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>SHR 逻辑右移。</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>SAR 算术右移。(=SHR)</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>ROL 循环左移。</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>ROR 循环右移。</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>RCL 通过进位的循环左移。</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>RCR 通过进位的循环右移。</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>以上八种移位指令，其移位次数可达255次。</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>移位一次时， 可直接用操作码。 如 SHL AX，1。</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>移位>1次时， 则由寄存器CL给出移位次数。</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>如 MOV CL，04</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>SHL AX，CL</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>四、串指令</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>───────────────────────────</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>DS:SI 源串段寄存器 :源串变址。</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>ES:DI 目标串段寄存器:目标串变址。</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>CX 重复次数计数器。</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>AL/AX 扫描值。</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量。</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>Z标志 用来控制扫描或比较操作的结束。</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>MOVS 串传送。</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>( MOVSB 传送字符。 MOVSW 传送字。 MOVSD 传送双字。 )</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>CMPS 串比较。</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>( CMPSB 比较字符。 CMPSW 比较字。 )</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>SCAS 串扫描。</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>把AL或AX的内容与目标串作比较，比较结果反映在标志位。</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>LODS 装入串。</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>把源串中的元素(字或字节)逐一装入AL或AX中。</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>( LODSB 传送字符。 LODSW 传送字。 LODSD 传送双字。 )</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>STOS 保存串。</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>是LODS的逆过程。</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>REP 当CX/ECX&lt;>0时重复。</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>REPE/REPZ 当ZF=1或比较结果相等，且CX/ECX&lt;>0时重复。</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>REPNE/REPNZ 当ZF=0或比较结果不相等，且CX/ECX&lt;>0时重复。</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>REPC 当CF=1且CX/ECX&lt;>0时重复。</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>REPNC 当CF=0且CX/ECX&lt;>0时重复。</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>五、程序转移指令</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>──────────────────────────</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>1>无条件转移指令 (长转移)</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>JMP 无条件转移指令</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>CALL 过程调用</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>RET/RETF过程返回。</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>2>条件转移指令 (短转移，-128到+127的距离内)</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>( 当且仅当(SF XOR OF)=1时，OP1 JA/JNBE 不小于或不等于时转移。</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>JAE/JNB 大于或等于转移。</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>JB/JNAE 小于转移。</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>JBE/JNA 小于或等于转移。</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>以上四条，测试无符号整数运算的结果(标志C和Z)。</pre></td></tr><tr><td data-num=\"130\"></td><td><pre>JG/JNLE 大于转移。</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>JGE/JNL 大于或等于转移。</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>JL/JNGE 小于转移。</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>JLE/JNG 小于或等于转移。</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>以上四条，测试带符号整数运算的结果(标志S，O和Z)。</pre></td></tr><tr><td data-num=\"135\"></td><td><pre>JE/JZ 等于转移。</pre></td></tr><tr><td data-num=\"136\"></td><td><pre>JNE/JNZ 不等于时转移。</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>JC 有进位时转移。</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>JNC 无进位时转移。</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>JNO 不溢出时转移。</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>JNP/JPO 奇偶性为奇数时转移。</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>JNS 符号位为 \"0\" 时转移。</pre></td></tr><tr><td data-num=\"142\"></td><td><pre>JO 溢出转移。</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>JP/JPE 奇偶性为偶数时转移。</pre></td></tr><tr><td data-num=\"144\"></td><td><pre>JS 符号位为 \"1\" 时转移。</pre></td></tr><tr><td data-num=\"145\"></td><td><pre>3>循环控制指令(短转移)</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>LOOP CX不为零时循环。</pre></td></tr><tr><td data-num=\"147\"></td><td><pre>LOOPE/LOOPZ CX不为零且标志Z=1时循环。</pre></td></tr><tr><td data-num=\"148\"></td><td><pre>LOOPNE/LOOPNZ CX不为零且标志Z=0时循环。</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>JCXZ CX为零时转移。</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>JECXZ ECX为零时转移。</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>4>中断指令</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>INT 中断指令</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>INTO 溢出中断</pre></td></tr><tr><td data-num=\"154\"></td><td><pre>IRET 中断返回</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>5>处理器控制指令</pre></td></tr><tr><td data-num=\"156\"></td><td><pre>HLT 处理器暂停， 直到出现中断或复位信号才继续。</pre></td></tr><tr><td data-num=\"157\"></td><td><pre>WAIT 当芯片引线TEST为高电平时使CPU进入等待状态。</pre></td></tr><tr><td data-num=\"158\"></td><td><pre>ESC 转换到外处理器。</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>LOCK 封锁总线。</pre></td></tr><tr><td data-num=\"160\"></td><td><pre>NOP 空操作。</pre></td></tr><tr><td data-num=\"161\"></td><td><pre>STC 置进位标志位。</pre></td></tr><tr><td data-num=\"162\"></td><td><pre>CLC 清进位标志位。</pre></td></tr><tr><td data-num=\"163\"></td><td><pre>CMC 进位标志取反。</pre></td></tr><tr><td data-num=\"164\"></td><td><pre>STD 置方向标志位。</pre></td></tr><tr><td data-num=\"165\"></td><td><pre>CLD 清方向标志位。</pre></td></tr><tr><td data-num=\"166\"></td><td><pre>STI 置中断允许位。</pre></td></tr><tr><td data-num=\"167\"></td><td><pre>CLI 清中断允许位。</pre></td></tr><tr><td data-num=\"168\"></td><td><pre>六、伪指令</pre></td></tr><tr><td data-num=\"169\"></td><td><pre>───────────────────────────</pre></td></tr><tr><td data-num=\"170\"></td><td><pre>DW 定义字(2字节)。</pre></td></tr><tr><td data-num=\"171\"></td><td><pre>PROC 定义过程。</pre></td></tr><tr><td data-num=\"172\"></td><td><pre>ENDP 过程结束。</pre></td></tr><tr><td data-num=\"173\"></td><td><pre>SEGMENT 定义段。</pre></td></tr><tr><td data-num=\"174\"></td><td><pre>ASSUME 建立段寄存器寻址。</pre></td></tr><tr><td data-num=\"175\"></td><td><pre>ENDS 段结束。</pre></td></tr><tr><td data-num=\"176\"></td><td><pre>END 程序结束。</pre></td></tr><tr><td data-num=\"177\"></td><td><pre></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>一.机械码,又称机器码.</pre></td></tr><tr><td data-num=\"179\"></td><td><pre>ultraedit打开,编辑exe文件时你会看到</pre></td></tr><tr><td data-num=\"180\"></td><td><pre>许许多多的由0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F组成的数码,这些数码</pre></td></tr><tr><td data-num=\"181\"></td><td><pre>就是机器码.</pre></td></tr><tr><td data-num=\"182\"></td><td><pre>修改程序时必须通过修改机器码来修改exe文件.</pre></td></tr><tr><td data-num=\"183\"></td><td><pre></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>二.需要熟练掌握的全部汇编知识(只有这么多)</pre></td></tr><tr><td data-num=\"185\"></td><td><pre>不大容易理解,可先强行背住,混个脸儿熟,以后慢慢的就理解了</pre></td></tr><tr><td data-num=\"186\"></td><td><pre>cmp a,b 比较a与b</pre></td></tr><tr><td data-num=\"187\"></td><td><pre>mov a,b 把b的值送给a</pre></td></tr><tr><td data-num=\"188\"></td><td><pre>ret 返回主程序</pre></td></tr><tr><td data-num=\"189\"></td><td><pre>nop 无作用,英文“no operation”的简写，意思是“do nothing”(机器码90)***机器码的含义参看上面</pre></td></tr><tr><td data-num=\"190\"></td><td><pre>(解释:ultraedit打开编辑exe文件时你看到90,等同于汇编语句nop)</pre></td></tr><tr><td data-num=\"191\"></td><td><pre>call 调用子程序</pre></td></tr><tr><td data-num=\"192\"></td><td><pre>je 或jz 若相等则跳(机器码74 或0F84)</pre></td></tr><tr><td data-num=\"193\"></td><td><pre>jne或jnz 若不相等则跳(机器码75或0F85)</pre></td></tr><tr><td data-num=\"194\"></td><td><pre>jmp 无条件跳(机器码EB)</pre></td></tr><tr><td data-num=\"195\"></td><td><pre>jb 若小于则跳</pre></td></tr><tr><td data-num=\"196\"></td><td><pre>ja 若大于则跳</pre></td></tr><tr><td data-num=\"197\"></td><td><pre>jg 若大于则跳</pre></td></tr><tr><td data-num=\"198\"></td><td><pre>jge 若大于等于则跳</pre></td></tr><tr><td data-num=\"199\"></td><td><pre>jl 若小于则跳</pre></td></tr><tr><td data-num=\"200\"></td><td><pre>jle 若小于等于则跳</pre></td></tr><tr><td data-num=\"201\"></td><td><pre>pop 出栈</pre></td></tr><tr><td data-num=\"202\"></td><td><pre>push 压栈</pre></td></tr><tr><td data-num=\"203\"></td><td><pre></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>三.常见修改(机器码)</pre></td></tr><tr><td data-num=\"205\"></td><td><pre>74=>75 74=>90 74=>EB</pre></td></tr><tr><td data-num=\"206\"></td><td><pre>75=>74 75=>90 75=>EB</pre></td></tr><tr><td data-num=\"207\"></td><td><pre></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>jnz->nop</pre></td></tr><tr><td data-num=\"209\"></td><td><pre>75->90(相应的机器码修改)</pre></td></tr><tr><td data-num=\"210\"></td><td><pre></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>jnz -> jmp</pre></td></tr><tr><td data-num=\"212\"></td><td><pre>75 -> EB(相应的机器码修改)</pre></td></tr><tr><td data-num=\"213\"></td><td><pre></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>jnz -> jz</pre></td></tr><tr><td data-num=\"215\"></td><td><pre>75->74 (正常) 0F 85 -> 0F 84(特殊情况下,有时,相应的机器码修改)</pre></td></tr><tr><td data-num=\"216\"></td><td><pre></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>四.两种不同情况的不同修改方法</pre></td></tr><tr><td data-num=\"218\"></td><td><pre>1.修改为jmp</pre></td></tr><tr><td data-num=\"219\"></td><td><pre>je(jne,jz,jnz) =>jmp相应的机器码EB （出错信息向上找到的第一个跳转）jmp的作用是绝对跳，无条件跳，从而跳过下面的出错信息</pre></td></tr><tr><td data-num=\"220\"></td><td><pre></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>xxxxxxxxxxxx 出错信息，例如：注册码不对，sorry,未注册版不能...，\"Function Not Avaible in Demo\" 或 \"Command Not Avaible\" 或 \"Can't save in Shareware/Demo\"等 （我们希望把它跳过，不让它出现）</pre></td></tr><tr><td data-num=\"222\"></td><td><pre>。。。</pre></td></tr><tr><td data-num=\"223\"></td><td><pre>。。。</pre></td></tr><tr><td data-num=\"224\"></td><td><pre>xxxxxxxxxxxx 正确路线所在</pre></td></tr><tr><td data-num=\"225\"></td><td><pre></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>2.修改为nop</pre></td></tr><tr><td data-num=\"227\"></td><td><pre>je(jne,jz,jnz) =>nop相应的机器码90 （正确信息向上找到的第一个跳转） nop的作用是抹掉这个跳转，使这个跳转无效，失去作用，从而使程序顺利来到紧跟其后的正确信息处</pre></td></tr><tr><td data-num=\"228\"></td><td><pre></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>xxxxxxxxxxxx 正确信息，例如：注册成功，谢谢您的支持等（我们希望它不被跳过，让它出现，程序一定要顺利来到这里）</pre></td></tr><tr><td data-num=\"230\"></td><td><pre>。。。</pre></td></tr><tr><td data-num=\"231\"></td><td><pre>。。。</pre></td></tr><tr><td data-num=\"232\"></td><td><pre>xxxxxxxxxxxx 出错信息（我们希望不要跳到这里，不让它出现）它们在存贮器和寄存器、寄存器和输入输出端口之间传送数据.</pre></td></tr><tr><td data-num=\"233\"></td><td><pre>1. 通用数据传送指令.</pre></td></tr><tr><td data-num=\"234\"></td><td><pre>MOV 传送字或字节.</pre></td></tr><tr><td data-num=\"235\"></td><td><pre>MOVSX 先符号扩展,再传送.</pre></td></tr><tr><td data-num=\"236\"></td><td><pre>MOVZX 先零扩展,再传送.</pre></td></tr><tr><td data-num=\"237\"></td><td><pre>PUSH 把字压入堆栈.</pre></td></tr><tr><td data-num=\"238\"></td><td><pre>POP 把字弹出堆栈.</pre></td></tr><tr><td data-num=\"239\"></td><td><pre>PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈.</pre></td></tr><tr><td data-num=\"240\"></td><td><pre>POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈.</pre></td></tr><tr><td data-num=\"241\"></td><td><pre>PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈.</pre></td></tr><tr><td data-num=\"242\"></td><td><pre>POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈.</pre></td></tr><tr><td data-num=\"243\"></td><td><pre>BSWAP 交换32位寄存器里字节的顺序</pre></td></tr><tr><td data-num=\"244\"></td><td><pre>XCHG 交换字或字节.( 至少有一个操作数为寄存器,段寄存器不可作为操作数)</pre></td></tr><tr><td data-num=\"245\"></td><td><pre>CMPXCHG 比较并交换操作数.( 第二个操作数必须为累加器AL/AX/EAX )</pre></td></tr><tr><td data-num=\"246\"></td><td><pre>XADD 先交换再累加.( 结果在第一个操作数里 )</pre></td></tr><tr><td data-num=\"247\"></td><td><pre>XLAT 字节查表转换.</pre></td></tr><tr><td data-num=\"248\"></td><td><pre>── BX 指向一张 256 字节的表的起点, AL 为表的索引值 (0-255,即</pre></td></tr><tr><td data-num=\"249\"></td><td><pre>0-FFH); 返回 AL 为查表结果. ( [BX+AL]->AL )</pre></td></tr><tr><td data-num=\"250\"></td><td><pre>2. 输入输出端口传送指令.</pre></td></tr><tr><td data-num=\"251\"></td><td><pre>IN I/O端口输入. ( 语法: IN 累加器, &#123;端口号│DX&#125; )</pre></td></tr><tr><td data-num=\"252\"></td><td><pre>OUT I/O端口输出. ( 语法: OUT &#123;端口号│DX&#125;,累加器 )</pre></td></tr><tr><td data-num=\"253\"></td><td><pre>输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,</pre></td></tr><tr><td data-num=\"254\"></td><td><pre>其范围是 0-65535.</pre></td></tr><tr><td data-num=\"255\"></td><td><pre>3. 目的地址传送指令.</pre></td></tr><tr><td data-num=\"256\"></td><td><pre>LEA 装入有效地址.</pre></td></tr><tr><td data-num=\"257\"></td><td><pre>例: LEA DX,string ;把偏移地址存到DX.</pre></td></tr><tr><td data-num=\"258\"></td><td><pre>LDS 传送目标指针,把指针内容装入DS.</pre></td></tr><tr><td data-num=\"259\"></td><td><pre>例: LDS SI,string ;把段地址:偏移地址存到DS:SI.</pre></td></tr><tr><td data-num=\"260\"></td><td><pre>LES 传送目标指针,把指针内容装入ES.</pre></td></tr><tr><td data-num=\"261\"></td><td><pre>例: LES DI,string ;把段地址:偏移地址存到ESI.</pre></td></tr><tr><td data-num=\"262\"></td><td><pre>LFS 传送目标指针,把指针内容装入FS.</pre></td></tr><tr><td data-num=\"263\"></td><td><pre>例: LFS DI,string ;把段地址:偏移地址存到FSI.</pre></td></tr><tr><td data-num=\"264\"></td><td><pre>LGS 传送目标指针,把指针内容装入GS.</pre></td></tr><tr><td data-num=\"265\"></td><td><pre>例: LGS DI,string ;把段地址:偏移地址存到GSI.</pre></td></tr><tr><td data-num=\"266\"></td><td><pre>LSS 传送目标指针,把指针内容装入SS.</pre></td></tr><tr><td data-num=\"267\"></td><td><pre>例: LSS DI,string ;把段地址:偏移地址存到SSI.</pre></td></tr><tr><td data-num=\"268\"></td><td><pre>4. 标志传送指令.</pre></td></tr><tr><td data-num=\"269\"></td><td><pre>LAHF 标志寄存器传送,把标志装入AH.</pre></td></tr><tr><td data-num=\"270\"></td><td><pre>SAHF 标志寄存器传送,把AH内容装入标志寄存器.</pre></td></tr><tr><td data-num=\"271\"></td><td><pre>PUSHF 标志入栈.</pre></td></tr><tr><td data-num=\"272\"></td><td><pre>POPF 标志出栈.</pre></td></tr><tr><td data-num=\"273\"></td><td><pre>PUSHD 32位标志入栈.</pre></td></tr><tr><td data-num=\"274\"></td><td><pre>POPD 32位标志出栈.</pre></td></tr><tr><td data-num=\"275\"></td><td><pre></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>二、算术运算指令</pre></td></tr><tr><td data-num=\"277\"></td><td><pre>───────────────────────────────────────</pre></td></tr><tr><td data-num=\"278\"></td><td><pre>ADD 加法.</pre></td></tr><tr><td data-num=\"279\"></td><td><pre>ADC 带进位加法.</pre></td></tr><tr><td data-num=\"280\"></td><td><pre>INC 加 1.</pre></td></tr><tr><td data-num=\"281\"></td><td><pre>AAA 加法的ASCII码调整.</pre></td></tr><tr><td data-num=\"282\"></td><td><pre>DAA 加法的十进制调整.</pre></td></tr><tr><td data-num=\"283\"></td><td><pre>SUB 减法.</pre></td></tr><tr><td data-num=\"284\"></td><td><pre>SBB 带借位减法.</pre></td></tr><tr><td data-num=\"285\"></td><td><pre>DEC 减 1.</pre></td></tr><tr><td data-num=\"286\"></td><td><pre>NEC 求反(以 0 减之).</pre></td></tr><tr><td data-num=\"287\"></td><td><pre>CMP 比较.(两操作数作减法,仅修改标志位,不回送结果).</pre></td></tr><tr><td data-num=\"288\"></td><td><pre>AAS 减法的ASCII码调整.</pre></td></tr><tr><td data-num=\"289\"></td><td><pre>DAS 减法的十进制调整.</pre></td></tr><tr><td data-num=\"290\"></td><td><pre>MUL 无符号乘法.</pre></td></tr><tr><td data-num=\"291\"></td><td><pre>IMUL 整数乘法.</pre></td></tr><tr><td data-num=\"292\"></td><td><pre>以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算),</pre></td></tr><tr><td data-num=\"293\"></td><td><pre>AAM 乘法的ASCII码调整.</pre></td></tr><tr><td data-num=\"294\"></td><td><pre>DIV 无符号除法.</pre></td></tr><tr><td data-num=\"295\"></td><td><pre>IDIV 整数除法.</pre></td></tr><tr><td data-num=\"296\"></td><td><pre>以上两条,结果回送:</pre></td></tr><tr><td data-num=\"297\"></td><td><pre>商回送AL,余数回送AH, (字节运算);</pre></td></tr><tr><td data-num=\"298\"></td><td><pre>或 商回送AX,余数回送DX, (字运算).</pre></td></tr><tr><td data-num=\"299\"></td><td><pre>AAD 除法的ASCII码调整.</pre></td></tr><tr><td data-num=\"300\"></td><td><pre>CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)</pre></td></tr><tr><td data-num=\"301\"></td><td><pre>CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)</pre></td></tr><tr><td data-num=\"302\"></td><td><pre>CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)</pre></td></tr><tr><td data-num=\"303\"></td><td><pre>CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)</pre></td></tr><tr><td data-num=\"304\"></td><td><pre></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>三、逻辑运算指令</pre></td></tr><tr><td data-num=\"306\"></td><td><pre>───────────────────────────────────────</pre></td></tr><tr><td data-num=\"307\"></td><td><pre>AND 与运算.</pre></td></tr><tr><td data-num=\"308\"></td><td><pre>OR 或运算.</pre></td></tr><tr><td data-num=\"309\"></td><td><pre>XOR 异或运算.</pre></td></tr><tr><td data-num=\"310\"></td><td><pre>NOT 取反.</pre></td></tr><tr><td data-num=\"311\"></td><td><pre>TEST 测试.(两操作数作与运算,仅修改标志位,不回送结果).</pre></td></tr><tr><td data-num=\"312\"></td><td><pre>SHL 逻辑左移.</pre></td></tr><tr><td data-num=\"313\"></td><td><pre>SAL 算术左移.(=SHL)</pre></td></tr><tr><td data-num=\"314\"></td><td><pre>SHR 逻辑右移.</pre></td></tr><tr><td data-num=\"315\"></td><td><pre>SAR 算术右移.(=SHR)</pre></td></tr><tr><td data-num=\"316\"></td><td><pre>ROL 循环左移.</pre></td></tr><tr><td data-num=\"317\"></td><td><pre>ROR 循环右移.</pre></td></tr><tr><td data-num=\"318\"></td><td><pre>RCL 通过进位的循环左移.</pre></td></tr><tr><td data-num=\"319\"></td><td><pre>RCR 通过进位的循环右移.</pre></td></tr><tr><td data-num=\"320\"></td><td><pre>以上八种移位指令,其移位次数可达255次.</pre></td></tr><tr><td data-num=\"321\"></td><td><pre>移位一次时, 可直接用操作码. 如 SHL AX,1.</pre></td></tr><tr><td data-num=\"322\"></td><td><pre>移位>1次时, 则由寄存器CL给出移位次数.</pre></td></tr><tr><td data-num=\"323\"></td><td><pre>如 MOV CL,04</pre></td></tr><tr><td data-num=\"324\"></td><td><pre>SHL AX,CL</pre></td></tr><tr><td data-num=\"325\"></td><td><pre></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>四、串指令</pre></td></tr><tr><td data-num=\"327\"></td><td><pre>───────────────────────────────────────</pre></td></tr><tr><td data-num=\"328\"></td><td><pre>DS:SI 源串段寄存器 :源串变址.</pre></td></tr><tr><td data-num=\"329\"></td><td><pre>ESI 目标串段寄存器:目标串变址.</pre></td></tr><tr><td data-num=\"330\"></td><td><pre>CX 重复次数计数器.</pre></td></tr><tr><td data-num=\"331\"></td><td><pre>AL/AX 扫描值.</pre></td></tr><tr><td data-num=\"332\"></td><td><pre>D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量.</pre></td></tr><tr><td data-num=\"333\"></td><td><pre>Z标志 用来控制扫描或比较操作的结束.</pre></td></tr><tr><td data-num=\"334\"></td><td><pre>MOVS 串传送.</pre></td></tr><tr><td data-num=\"335\"></td><td><pre>( MOVSB 传送字符. MOVSW 传送字. MOVSD 传送双字. )</pre></td></tr><tr><td data-num=\"336\"></td><td><pre>CMPS 串比较.</pre></td></tr><tr><td data-num=\"337\"></td><td><pre>( CMPSB 比较字符. CMPSW 比较字. )</pre></td></tr><tr><td data-num=\"338\"></td><td><pre>SCAS 串扫描.</pre></td></tr><tr><td data-num=\"339\"></td><td><pre>把AL或AX的内容与目标串作比较,比较结果反映在标志位.</pre></td></tr><tr><td data-num=\"340\"></td><td><pre>LODS 装入串.</pre></td></tr><tr><td data-num=\"341\"></td><td><pre>把源串中的元素(字或字节)逐一装入AL或AX中.</pre></td></tr><tr><td data-num=\"342\"></td><td><pre>( LODSB 传送字符. LODSW 传送字. LODSD 传送双字. )</pre></td></tr><tr><td data-num=\"343\"></td><td><pre>STOS 保存串.</pre></td></tr><tr><td data-num=\"344\"></td><td><pre>是LODS的逆过程.</pre></td></tr><tr><td data-num=\"345\"></td><td><pre>REP 当CX/ECX&lt;>0时重复.</pre></td></tr><tr><td data-num=\"346\"></td><td><pre>REPE/REPZ 当ZF=1或比较结果相等,且CX/ECX&lt;>0时重复.</pre></td></tr><tr><td data-num=\"347\"></td><td><pre>REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&lt;>0时重复.</pre></td></tr><tr><td data-num=\"348\"></td><td><pre>REPC 当CF=1且CX/ECX&lt;>0时重复.</pre></td></tr><tr><td data-num=\"349\"></td><td><pre>REPNC 当CF=0且CX/ECX&lt;>0时重复.</pre></td></tr><tr><td data-num=\"350\"></td><td><pre></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>五、程序转移指令</pre></td></tr><tr><td data-num=\"352\"></td><td><pre>───────────────────────────────────────</pre></td></tr><tr><td data-num=\"353\"></td><td><pre>1>无条件转移指令 (长转移)</pre></td></tr><tr><td data-num=\"354\"></td><td><pre>JMP 无条件转移指令</pre></td></tr><tr><td data-num=\"355\"></td><td><pre>CALL 过程调用</pre></td></tr><tr><td data-num=\"356\"></td><td><pre>RET/RETF过程返回.</pre></td></tr><tr><td data-num=\"357\"></td><td><pre>2>条件转移指令 (短转移,-128到+127的距离内)</pre></td></tr><tr><td data-num=\"358\"></td><td><pre>( 当且仅当(SF XOR OF)=1时,OP1&lt;OP2 )</pre></td></tr><tr><td data-num=\"359\"></td><td><pre>JA/JNBE 不小于或不等于时转移.</pre></td></tr><tr><td data-num=\"360\"></td><td><pre>JAE/JNB 大于或等于转移.</pre></td></tr><tr><td data-num=\"361\"></td><td><pre>JB/JNAE 小于转移.</pre></td></tr><tr><td data-num=\"362\"></td><td><pre>JBE/JNA 小于或等于转移.</pre></td></tr><tr><td data-num=\"363\"></td><td><pre>以上四条,测试无符号整数运算的结果(标志C和Z).</pre></td></tr><tr><td data-num=\"364\"></td><td><pre>JG/JNLE 大于转移.</pre></td></tr><tr><td data-num=\"365\"></td><td><pre>JGE/JNL 大于或等于转移.</pre></td></tr><tr><td data-num=\"366\"></td><td><pre>JL/JNGE 小于转移.</pre></td></tr><tr><td data-num=\"367\"></td><td><pre>JLE/JNG 小于或等于转移.</pre></td></tr><tr><td data-num=\"368\"></td><td><pre>以上四条,测试带符号整数运算的结果(标志S,O和Z).</pre></td></tr><tr><td data-num=\"369\"></td><td><pre>JE/JZ 等于转移.</pre></td></tr><tr><td data-num=\"370\"></td><td><pre>JNE/JNZ 不等于时转移.</pre></td></tr><tr><td data-num=\"371\"></td><td><pre>JC 有进位时转移.</pre></td></tr><tr><td data-num=\"372\"></td><td><pre>JNC 无进位时转移.</pre></td></tr><tr><td data-num=\"373\"></td><td><pre>JNO 不溢出时转移.</pre></td></tr><tr><td data-num=\"374\"></td><td><pre>JNP/JPO 奇偶性为奇数时转移.</pre></td></tr><tr><td data-num=\"375\"></td><td><pre>JNS 符号位为 \"0\" 时转移.</pre></td></tr><tr><td data-num=\"376\"></td><td><pre>JO 溢出转移.</pre></td></tr><tr><td data-num=\"377\"></td><td><pre>JP/JPE 奇偶性为偶数时转移.</pre></td></tr><tr><td data-num=\"378\"></td><td><pre>JS 符号位为 \"1\" 时转移.</pre></td></tr><tr><td data-num=\"379\"></td><td><pre>3>循环控制指令(短转移)</pre></td></tr><tr><td data-num=\"380\"></td><td><pre>LOOP CX不为零时循环.</pre></td></tr><tr><td data-num=\"381\"></td><td><pre>LOOPE/LOOPZ CX不为零且标志Z=1时循环.</pre></td></tr><tr><td data-num=\"382\"></td><td><pre>LOOPNE/LOOPNZ CX不为零且标志Z=0时循环.</pre></td></tr><tr><td data-num=\"383\"></td><td><pre>JCXZ CX为零时转移.</pre></td></tr><tr><td data-num=\"384\"></td><td><pre>JECXZ ECX为零时转移.</pre></td></tr><tr><td data-num=\"385\"></td><td><pre>4>中断指令</pre></td></tr><tr><td data-num=\"386\"></td><td><pre>INT 中断指令</pre></td></tr><tr><td data-num=\"387\"></td><td><pre>INTO 溢出中断</pre></td></tr><tr><td data-num=\"388\"></td><td><pre>IRET 中断返回</pre></td></tr><tr><td data-num=\"389\"></td><td><pre>5>处理器控制指令</pre></td></tr><tr><td data-num=\"390\"></td><td><pre>HLT 处理器暂停, 直到出现中断或复位信号才继续.</pre></td></tr><tr><td data-num=\"391\"></td><td><pre>WAIT 当芯片引线TEST为高电平时使CPU进入等待状态.</pre></td></tr><tr><td data-num=\"392\"></td><td><pre>ESC 转换到外处理器.</pre></td></tr><tr><td data-num=\"393\"></td><td><pre>LOCK 封锁总线.</pre></td></tr><tr><td data-num=\"394\"></td><td><pre>NOP 空操作.</pre></td></tr><tr><td data-num=\"395\"></td><td><pre>STC 置进位标志位.</pre></td></tr><tr><td data-num=\"396\"></td><td><pre>CLC 清进位标志位.</pre></td></tr><tr><td data-num=\"397\"></td><td><pre>CMC 进位标志取反.</pre></td></tr><tr><td data-num=\"398\"></td><td><pre>STD 置方向标志位.</pre></td></tr><tr><td data-num=\"399\"></td><td><pre>CLD 清方向标志位.</pre></td></tr><tr><td data-num=\"400\"></td><td><pre>STI 置中断允许位.</pre></td></tr><tr><td data-num=\"401\"></td><td><pre>CLI 清中断允许位.</pre></td></tr><tr><td data-num=\"402\"></td><td><pre></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>六、伪指令</pre></td></tr><tr><td data-num=\"404\"></td><td><pre>───────────────────────────────────────</pre></td></tr><tr><td data-num=\"405\"></td><td><pre>DW 定义字(2字节).</pre></td></tr><tr><td data-num=\"406\"></td><td><pre>PROC 定义过程.</pre></td></tr><tr><td data-num=\"407\"></td><td><pre>ENDP 过程结束.</pre></td></tr><tr><td data-num=\"408\"></td><td><pre>SEGMENT 定义段.</pre></td></tr><tr><td data-num=\"409\"></td><td><pre>ASSUME 建立段寄存器寻址.</pre></td></tr><tr><td data-num=\"410\"></td><td><pre>ENDS 段结束.</pre></td></tr><tr><td data-num=\"411\"></td><td><pre>END 程序结束</pre></td></tr></table></figure>",
            "tags": [
                "网络安全",
                "技术干货",
                "黑客"
            ]
        },
        {
            "id": "http://zhyzhyzhy.cn/2022/10/24/JARM%E6%AC%BA%E9%AA%97/",
            "url": "http://zhyzhyzhy.cn/2022/10/24/JARM%E6%AC%BA%E9%AA%97/",
            "title": "JARM签名欺骗， 我现在是 Cobalt Strike 服务器！",
            "date_published": "2022-10-23T18:00:00.000Z",
            "content_html": "<h1 id=\"jarm签名欺骗\"><a class=\"anchor\" href=\"#jarm签名欺骗\">#</a> JARM 签名欺骗</h1>\n<p>JARM 是非常有用的指纹识别工具，但可以通过从其他服务重放服务器 hello 来欺骗。</p>\n<p>JARM 扫描器是一种非常有效的系统指纹识别工具。它使用来自 TLS 握手的 Server Hello 响应来生成签名。然后可以使用这些来查找类似的软件或服务。非常适合查找 C2 或其他实施 TLS 的恶意服务器。因此，shodan.io 在其扫描仪中使用这种指纹识别机制也就不足为奇了。阅读<a href=\"http://zhyzhyzhy.cn:7001/2022/10/24/JARM%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB/\"> JARM 指纹识别</a>相关的帖子，了解更过的知识。</p>\n<h2 id=\"那么问题来了是否有可能欺骗这些-jarm-签名让我们来了解一下\"><a class=\"anchor\" href=\"#那么问题来了是否有可能欺骗这些-jarm-签名让我们来了解一下\">#</a> 那么问题来了：是否有可能欺骗这些 JARM 签名？让我们来了解一下！</h2>\n<p>我们知道，扫描 Cobalt Strike 服务器会产生以下签名 07d14d16d21d21d07c42d41d00041d24a458a375eef0c576d23a7bab9a9fb1</p>\n<p>Cobalt Strike 博客中揭示了此签名不是 Cobalt Strike 特有的。无论如何，让我们仍然使用它作为起点。</p>\n<p>首先，我可以使用资产测绘工具来查找具有匹配哈希的服务器。使用 jarmscan 对其进行了扫描，并创建了响应的数据包捕获。Wireshark 中的 ssl 握手 (filter:ssl.handshake.type == 1) 过滤器将显示扫描仪发送的所有 TLS 客户端 Hello。</p>\n<p><img data-src=\"https://image.3001.net/images/20220525/1653481427_628e1fd3c9eeeb9ef30e9.png!small\" alt=\"12\" /></p>\n<p>反过来，“Cobalt Strike” 服务器将返回其服务器 Hello。jarmscan 将使用它们生成唯一的签名（filter:ssl.handshake.type==2）。</p>\n<p><img data-src=\"https://image.3001.net/images/20220525/1653481415_628e1fc77d3fefa687987.png!small\" alt=\"\" /><br />\n这些 Server Hello 是我们想要重放的数据包。这可以通过设置一个监听特定 Client Hello 的 TCP 服务器轻松完成，然后重播从所谓的 Cobalt Strike 服务器捕获的相应 Server Hello。一种相当方便但有效的方法。</p>\n<blockquote>\n<p>参考文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzMzNDI5OC5odG1s\">https://www.freebuf.com/articles/web/334298.html</span></p>\n</blockquote>\n",
            "tags": [
                "网络安全",
                "技术干货",
                "黑客"
            ]
        },
        {
            "id": "http://zhyzhyzhy.cn/2022/10/24/JARM%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB/",
            "url": "http://zhyzhyzhy.cn/2022/10/24/JARM%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB/",
            "title": "JARM 指纹识别",
            "date_published": "2022-10-23T17:00:00.000Z",
            "content_html": "<h2 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍：</h2>\n<p>JARM 是一个活动的传输层安全 (TLS) 服务器指纹识别工具。</p>\n<p>使用 JARM 进行扫描提供了识别和分组 Internet 上的恶意服务器的能力。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NhbGVzZm9yY2UvamFybQ==\">JARM tools</span></p>\n<h2 id=\"jarm-指纹可用于\"><a class=\"anchor\" href=\"#jarm-指纹可用于\">#</a> JARM 指纹可用于：</h2>\n<p>快速验证组中的所有服务器是否具有相同的 TLS 配置。</p>\n<p>通过配置对 Internet 上的不同服务器进行分组，例如，识别服务器可能属于 Google、Salesforce 和 Apple。</p>\n<p>识别默认应用程序或基础架构。</p>\n<p>识别 Internet 上的恶意软件命令和控制基础设施以及其他恶意服务器。</p>\n<h2 id=\"本文中您将了解到\"><a class=\"anchor\" href=\"#本文中您将了解到\">#</a> 本文中，您将了解到：</h2>\n<p>JARM 是如何工作的。</p>\n<p>如何使用 JARM 来识别恶意服务器。</p>\n<p>从被动网络安全黑名单转变为主动网络安全黑名单。</p>\n<p>如何将 JARM 部署到您的检测和响应管道中。</p>\n<p>JARM 如何用于配置验证和应用程序识别。</p>\n<h2 id=\"jarm-的工作原理\"><a class=\"anchor\" href=\"#jarm-的工作原理\">#</a> JARM 的工作原理</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>zhy@zhy jarm<span class=\"token punctuation\">]</span>$ python jarm.py <span class=\"token parameter variable\">-V</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>JARM version <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>zhy@zhy jarm<span class=\"token punctuation\">]</span>$ python jarm.py <span class=\"token parameter variable\">-h</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>usage: jarm.py <span class=\"token punctuation\">[</span>-h<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-i INPUT<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-p PORT<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-v<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-V<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-o OUTPUT<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-j<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-P PROXY<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>scan<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Enter an IP address and port to scan.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>positional arguments:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  scan                  Enter an IP or domain to scan.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>options:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  -h, <span class=\"token parameter variable\">--help</span>            show this <span class=\"token builtin class-name\">help</span> message and <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token parameter variable\">-i</span> INPUT, <span class=\"token parameter variable\">--input</span> INPUT</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        Provide a list of IP addresses or domains to scan, one domain or IP address per line. Optional:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                        Specify port to scan with comma separation <span class=\"token punctuation\">(</span>e.g. <span class=\"token number\">8.8</span>.4.4,853<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token parameter variable\">-p</span> PORT, <span class=\"token parameter variable\">--port</span> PORT  Enter a port to scan <span class=\"token punctuation\">(</span>default <span class=\"token number\">443</span><span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  -v, <span class=\"token parameter variable\">--verbose</span>         Verbose mode: displays the JARM results before being hashed.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  -V, <span class=\"token parameter variable\">--version</span>         Print out version and exit.</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token parameter variable\">-o</span> OUTPUT, <span class=\"token parameter variable\">--output</span> OUTPUT</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                        Provide a filename to output/append results to a CSV file.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  -j, <span class=\"token parameter variable\">--json</span>            Output ndjson <span class=\"token punctuation\">(</span>either to <span class=\"token function\">file</span> or stdout<span class=\"token punctuation\">;</span> overrides <span class=\"token parameter variable\">--output</span> defaults to CSV<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token parameter variable\">-P</span> PROXY, <span class=\"token parameter variable\">--proxy</span> PROXY</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                        To use a SOCKS5 proxy, provide address:port.</pre></td></tr></table></figure><p>在学习 JARM 的工作原理之前，了解 TLS 的工作原理很重要。TLS 及其前身 SSL 用于加密常见应用程序（如 Internet 浏览器）的通信，以确保数据安全，也用于加密恶意软件，因此它可以进行隐藏在噪声中。中要启动 TLS 会话，客户端将在 TCP 三次握手之后发送 TLS Client Hello 消息。此数据包及其生成方式取决于构建客户端应用程序时使用的包和方法。服务器如果接受 TLS 连接，将使用 TLS Server Hello 数据包进行响应。<br />\n<img data-src=\"https://image.3001.net/images/20220525/1653482074_628e225a76d41370b9f7d.gif!small\" alt=\"\" /><br />\nTLS 服务器根据在 TLS 客户端 Hello 数据包中接收到的详细信息制定其服务器 Hello 数据包。根据应用程序或服务器的构建方式，服务器回复 Hello 的方式可能会有所不同，包括：</p>\n<pre><code>    操作系统\n\n    操作系统版本\n\n    使用的库\n\n    使用的这些库的版本\n\n    调用库的顺序\n\n    自定义配置\n</code></pre>\n<p>所有这些因素导致每个 TLS 服务器以独特的方式响应。各种因素的组合使得不同组织部署的服务器不太可能有相同的响应。</p>\n<p>下面是在<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aXJlc2hhcmsuY29tLw==\"> Wireshark</span> 中查看的 TLS 客户端 Hello 和服务器 Hello 的示例。<br />\n<img data-src=\"https://image.3001.net/images/20220525/1653481840_628e2170c35b715852943.png!small\" alt=\"\" /></p>\n<p><img data-src=\"https://image.3001.net/images/20220525/1653481847_628e2177e27d38ad629ca.png!small\" alt=\"\" /><br />\nJARM 通过主动向目标 TLS 服务器发送 10 个 TLS 客户端 Hello 数据包并捕获 TLS 服务器 Hello 响应的特定属性来工作。然后以特定方式对聚合的 TLS 服务器响应进行哈希处理以生成 JARM 指纹。</p>\n<p>JARM 中的 10 个 TLS 客户端 Hello 数据包经过特殊设计，可在 TLS 服务器中提取唯一响应。JARM 以不同的顺序发送不同的 TLS 版本、密码和扩展，以收集唯一的响应。服务器是否支持 TLS 1.3？ 它会与 1.2 密码协商 TLS 1.3 吗？如果我们将密码从最弱到最强排序，它会选择哪个密码？这些是 JARM 本质上要求服务器提取最独特的响应的不寻常问题的类型。然后对 10 个响应进行哈希处理以生成 JARM 指纹。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>zhy@zhy-f0 jarm<span class=\"token punctuation\">]</span>$ python jarm.py <span class=\"token parameter variable\">-v</span> baidu.com</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Domain: baidu.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Resolved IP: <span class=\"token number\">220.181</span>.38.251</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>JARM: 29d29d00029d29d1fc29d29d29d29d881e59db99b9f67f908be168829ecef9</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Scan <span class=\"token number\">1</span>: c02f<span class=\"token operator\">|</span>0303<span class=\"token operator\">|</span>http/1.1<span class=\"token operator\">|</span>ff01-000b-0023-0010,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Scan <span class=\"token number\">2</span>: c02f<span class=\"token operator\">|</span>0303<span class=\"token operator\">|</span>http/1.1<span class=\"token operator\">|</span>ff01-000b-0023-0010,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Scan <span class=\"token number\">3</span>: <span class=\"token operator\">||</span><span class=\"token operator\">|</span>,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Scan <span class=\"token number\">4</span>: c02f<span class=\"token operator\">|</span>0303<span class=\"token operator\">||</span>ff01-000b-0023,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Scan <span class=\"token number\">5</span>: c02f<span class=\"token operator\">|</span>0303<span class=\"token operator\">||</span>ff01-000b-0023,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Scan <span class=\"token number\">6</span>: c011<span class=\"token operator\">|</span>0302<span class=\"token operator\">|</span>http/1.1<span class=\"token operator\">|</span>ff01-000b-0023-0010,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Scan <span class=\"token number\">7</span>: c02f<span class=\"token operator\">|</span>0303<span class=\"token operator\">|</span>http/1.1<span class=\"token operator\">|</span>ff01-000b-0023-0010,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Scan <span class=\"token number\">8</span>: c02f<span class=\"token operator\">|</span>0303<span class=\"token operator\">|</span>http/1.1<span class=\"token operator\">|</span>ff01-000b-0023-0010,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Scan <span class=\"token number\">9</span>: c02f<span class=\"token operator\">|</span>0303<span class=\"token operator\">|</span>http/1.1<span class=\"token operator\">|</span>ff01-000b-0023-0010,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Scan <span class=\"token number\">10</span>: c02f<span class=\"token operator\">|</span>0303<span class=\"token operator\">|</span>http/1.1<span class=\"token operator\">|</span>ff01-000b-0023-0010</pre></td></tr></table></figure><p><img data-src=\"https://image.3001.net/images/20220525/1653481819_628e215bd6ed388c654e2.png!small\" alt=\"\" /><br />\n<img data-src=\"https://image.3001.net/images/20220525/1653481826_628e2162959126319791b.png!small\" alt=\"\" /></p>\n<p>在收到每个 TLS 服务器问候消息后，JARM 会使用 FIN 优雅地关闭连接，以免套接字打开。</p>\n<h2 id=\"jarm-示例\"><a class=\"anchor\" href=\"#jarm-示例\">#</a> JARM 示例：</h2>\n<table>\n<thead>\n<tr>\n<th>Domain</th>\n<th>JARM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3NhbGVzZm9yY2UuY29t\">salesforce.com</span></td>\n<td>2ad2ad0002ad2ad00042d42d00000069d641f34fe76acdc05c40262f8815e5</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2ZvcmNlLmNvbQ==\">force.com</span></td>\n<td>2ad2ad0002ad2ad00042d42d00000069d641f34fe76acdc05c40262f8815e5</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2dvb2dsZS5jb20=\">google.com</span></td>\n<td>27d40d40d29d40d1dc42d43d00041d4689ee210389f4f6b4b5b1b93f92252d</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2ZhY2Vib29rLmNvbQ==\">facebook.com</span></td>\n<td>27d40d40d29d40d1dc42d43d00041d4689ee210389f4f6b4b5b1b93f92252d</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2luc3RhZ3JhbS5jb20=\">instagram.com</span></td>\n<td>27d27d27d29d27d1dc41d43d00041d741011a7be03d7498e0df05581db08a9</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL29jdWx1cy5jb20=\">oculus.com</span></td>\n<td>27d27d27d29d27d1dc41d43d00041d741011a7be03d7498e0df05581db08a9</td>\n</tr>\n</tbody>\n</table>\n<p>需要注意的是，JARM 是一种高性能指纹功能，不应将其视为或与安全加密功能混淆。</p>\n<h2 id=\"如何使用-jarm-识别恶意服务器\"><a class=\"anchor\" href=\"#如何使用-jarm-识别恶意服务器\">#</a> 如何使用 JARM 识别恶意服务器</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93YW5nemhhbi4zNjAuY24vMjk2Lmh0bWw=\">https://wangzhan.360.cn/296.html</span></p>\n<blockquote>\n<p>本文转载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vc2VjdG9vbC8zMzQyOTkuaHRtbA==\">https://www.freebuf.com/sectool/334299.html</span></p>\n</blockquote>\n",
            "tags": [
                "网络安全",
                "技术干货",
                "黑客"
            ]
        },
        {
            "id": "http://zhyzhyzhy.cn/2022/10/24/2022%E5%8F%8C%E5%8D%81%E4%B8%80%E5%B0%8F%E8%84%9A%E6%9C%AC/",
            "url": "http://zhyzhyzhy.cn/2022/10/24/2022%E5%8F%8C%E5%8D%81%E4%B8%80%E5%B0%8F%E8%84%9A%E6%9C%AC/",
            "title": "【2022年】一键完成淘宝/京东双十一活动脚本",
            "date_published": "2022-10-23T16:00:00.000Z",
            "content_html": "<p>有到一年一度的双十一了，想不想解放双手</p>\n<h1 id=\"声明\"><a class=\"anchor\" href=\"#声明\">#</a> 声明</h1>\n<blockquote>\n<p><em><strong>仅供个人使用、禁止商用，请勿用于薅羊毛非法倒卖等违法行为，由此产生的法律后果需自行承担，阅读下文代表认同以上协议。</strong></em></p>\n</blockquote>\n<h1 id=\"教程\"><a class=\"anchor\" href=\"#教程\">#</a> 教程</h1>\n<h2 id=\"andriod用户使用autojs管理脚本\"><a class=\"anchor\" href=\"#andriod用户使用autojs管理脚本\">#</a> Andriod 用户：使用 AutoJS 管理脚本</h2>\n<p>如果您想在电脑上完成下述操作，您也可以安装模拟器（但是部分模拟器可能会出现京东、淘宝安装之后打不开的情况，因此还是强烈建议使用真机）</p>\n<blockquote>\n<p>(无法下载使用右击新建标签打开)</p>\n</blockquote>\n<p><a href=\"https://zhyzhyzhy.cn/file/autojs4.1.1.apk\">AutoJS 免费版下载</a><br />\n<a href=\"https://zhyzhyzhy.cn/file/Auto.js%20Prov7.0.8-3%5B%E5%85%8D%E7%99%BB%E5%BD%95Pro%E7%89%88%5D.apk\"> AutoJS pro7.0.8 破解版下载</a><br />\n<a href=\"https://zhyzhyzhy.cn/file/MuMuInstaller_1.2.1.0_nochannel_zh-Hans_1632466157.exe\">网易 MuMu 模拟器下载</a><br />\n<strong>阿里云盘</strong><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tL3MvaDE0YVlQUW50bkw=\"> https://www.aliyundrive.com/s/h14aYPQntnL</span><br />\n 提取码: c6r9<br />\n2022 年京东双十一最新脚本，点击👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmFpZHUuY29t\">如何使用脚本</span></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> sleepTime <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> speed <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 任务序号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token constant\">TASK_ID</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> appPackageName <span class=\"token operator\">=</span> <span class=\"token string\">\"com.jingdong.app.mall\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 忽略任务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">IGNORE_TASK_LIST</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'授权信息'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'确认授权'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'下单再得'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">BACK_LIST</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'获得8000金币'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'获得7000金币'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'获得4000金币'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'获得3000金币'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 是否需要进入活动界面</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">var</span> isNeedIntoActivityUi <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 判断停留时间</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 定时器</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">var</span> interval<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 任务进行中标记</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">var</span> task_process <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 是否为品牌墙任务</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">var</span> is_pp <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 是否领取奖励</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">var</span> is_get_reward <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"项目地址:https://github.com/czj2369/jd_tb_auto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"音量上键结束脚本运行\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"如果程序无法自动进入活动页，请手动进入！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 子线程监听音量上键按下</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    threads<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        events<span class=\"token punctuation\">.</span><span class=\"token function\">setKeyInterceptionEnabled</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"volume_up\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 启用按键监听</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        events<span class=\"token punctuation\">.</span><span class=\"token function\">observeKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 监听音量上键按下</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        events<span class=\"token punctuation\">.</span><span class=\"token function\">onKeyDown</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"volume_up\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"脚本退出!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">// 子线程开启计时</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    threads<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>interval <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token comment\">// 开启计时器，进行卡顿计时</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">// 启动定时器前，将计数器归为 0</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开启定时器\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token comment\">//console.log (\"停留时间计时：\", JUDGE_TIME);</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token function\">recoverApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前手机分辨率\"</span><span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">// 设置分辨率</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token function\">setScreenMetrics</span><span class=\"token punctuation\">(</span><span class=\"token number\">1090</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"设置手机脚本分辨率\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1090</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    auto<span class=\"token punctuation\">.</span><span class=\"token function\">waitFor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    auto<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"normal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">// 启动京东</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    app<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span>appPackageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">// 启动任务</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        task_process <span class=\"token operator\">=</span> <span class=\"token function\">clikcFinish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token function\">enterActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>task_process<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token function\">execTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"75\"></td><td><pre> * 进入活动界面</pre></td></tr><tr><td data-num=\"76\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">enterActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">desc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"浮层活动\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"购物车\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> <span class=\"token function\">desc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"浮层活动\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token function\">click</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token function\">click</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">textContains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"距离下次抽到分红\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"做任务 赚金币\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击做任务\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">855</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1893</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1035</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">855</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1893</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1035</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"97\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"98\"></td><td><pre> * @returns 点击去完成</pre></td></tr><tr><td data-num=\"99\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">clikcFinish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">textContains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"去打卡\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">const</span> daka <span class=\"token operator\">=</span> <span class=\"token function\">textContains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"去打卡\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token function\">click</span><span class=\"token punctuation\">(</span>daka<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> daka<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前进度：10/10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>is_get_reward<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">516</span><span class=\"token punctuation\">,</span> <span class=\"token number\">648</span><span class=\"token punctuation\">,</span> <span class=\"token number\">606</span><span class=\"token punctuation\">,</span> <span class=\"token number\">684</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">705</span><span class=\"token punctuation\">,</span> <span class=\"token number\">648</span><span class=\"token punctuation\">,</span> <span class=\"token number\">792</span><span class=\"token punctuation\">,</span> <span class=\"token number\">684</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">891</span><span class=\"token punctuation\">,</span> <span class=\"token number\">648</span><span class=\"token punctuation\">,</span> <span class=\"token number\">981</span><span class=\"token punctuation\">,</span> <span class=\"token number\">684</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        is_get_reward <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前任务序号：\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">TASK_ID</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> <span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"去领取\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"去领取\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"去完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token constant\">TASK_ID</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>button <span class=\"token operator\">!=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> button<span class=\"token punctuation\">.</span><span class=\"token function\">bounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token keyword\">const</span> parentButton <span class=\"token operator\">=</span> button<span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> parentButton<span class=\"token punctuation\">.</span><span class=\"token function\">childCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> parentButton<span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">bounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>                <span class=\"token keyword\">const</span> info <span class=\"token operator\">=</span> parentButton<span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前任务:\"</span><span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"浏览5个品牌墙店铺\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                    is_pp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token comment\">//sleep(2000);</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">click</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击去完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"143\"></td><td><pre> * 执行任务</pre></td></tr><tr><td data-num=\"144\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"145\"></td><td><pre> * @returns </pre></td></tr><tr><td data-num=\"146\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">execTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token comment\">// 判断任务序号是否需要自增</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token function\">judgeAddTaskId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token comment\">// 滑动任务</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token function\">swipeTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token comment\">// 浏览商品任务</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token function\">viewProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token comment\">// 加购任务</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token function\">addCarTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token comment\">// 种草城任务</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token function\">viewBrankTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token comment\">// 浏览品牌商店任务</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token function\">viewBrankShopTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"169\"></td><td><pre> * 判断任务序号是否需要自增</pre></td></tr><tr><td data-num=\"170\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">judgeAddTaskId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token constant\">IGNORE_TASK_LIST</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">textContains</span><span class=\"token punctuation\">(</span><span class=\"token constant\">IGNORE_TASK_LIST</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>            <span class=\"token constant\">TASK_ID</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">TASK_ID</span> <span class=\"token operator\">>=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>                <span class=\"token constant\">TASK_ID</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"任务序号自增:\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">TASK_ID</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>            <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>            <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>            <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>            task_process <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"190\"></td><td><pre> * 滑动任务</pre></td></tr><tr><td data-num=\"191\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">swipeTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">textContains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"滑动浏览\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"去完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">swipe</span><span class=\"token punctuation\">(</span><span class=\"token number\">971</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1610</span><span class=\"token punctuation\">,</span> <span class=\"token number\">989</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>            <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>            <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">BACK_LIST</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BACK_LIST</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>                    isReturn <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>                    <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>                    task_process <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>                    <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>                    <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>                    <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre></pre></td></tr><tr><td data-num=\"212\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"213\"></td><td><pre> * 浏览商品任务</pre></td></tr><tr><td data-num=\"214\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">viewProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前页点击浏览4个商品领金币5000金币\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"浏览4个商品任务\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>        <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token function\">textContains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"¥\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>        <span class=\"token keyword\">const</span> ret <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">bounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>            <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>        <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>        <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>        <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>        task_process <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre></pre></td></tr><tr><td data-num=\"233\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"234\"></td><td><pre> * 加购任务</pre></td></tr><tr><td data-num=\"235\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">addCarTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前页浏览加购4个商品领4000金币\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"浏览4个商品任务\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">315</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1098</span><span class=\"token punctuation\">,</span> <span class=\"token number\">501</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1182</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>            <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>        <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>        <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>        <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>        task_process <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre></pre></td></tr><tr><td data-num=\"252\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"253\"></td><td><pre> * 浏览品牌商店任务</pre></td></tr><tr><td data-num=\"254\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">viewBrankShopTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>is_pp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">867</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">957</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>        <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">324</span><span class=\"token punctuation\">,</span> <span class=\"token number\">867</span><span class=\"token punctuation\">,</span> <span class=\"token number\">498</span><span class=\"token punctuation\">,</span> <span class=\"token number\">957</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>        <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">582</span><span class=\"token punctuation\">,</span> <span class=\"token number\">867</span><span class=\"token punctuation\">,</span> <span class=\"token number\">756</span><span class=\"token punctuation\">,</span> <span class=\"token number\">957</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>        <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">840</span><span class=\"token punctuation\">,</span> <span class=\"token number\">867</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1017</span><span class=\"token punctuation\">,</span> <span class=\"token number\">957</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>        <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>        <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1062</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1152</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>        is_pp <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>        <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>        <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>        task_process <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre></pre></td></tr><tr><td data-num=\"281\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"282\"></td><td><pre> * 种草城任务</pre></td></tr><tr><td data-num=\"283\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">viewBrankTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"品牌种草城\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>        <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token number\">540</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1746</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1029</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>                <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>                <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>                i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>                <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>                <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>                <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>                <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>                task_process <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre></pre></td></tr><tr><td data-num=\"304\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"305\"></td><td><pre> * 点击控件中点</pre></td></tr><tr><td data-num=\"306\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"307\"></td><td><pre> * @param &#123;*&#125; uiName </pre></td></tr><tr><td data-num=\"308\"></td><td><pre> * @param &#123;*&#125; type </pre></td></tr><tr><td data-num=\"309\"></td><td><pre> * @param &#123;*&#125; index </pre></td></tr><tr><td data-num=\"310\"></td><td><pre> * @returns </pre></td></tr><tr><td data-num=\"311\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">clickCenter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uiName<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>    <span class=\"token keyword\">let</span> type <span class=\"token operator\">=</span> type <span class=\"token operator\">||</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>    <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> index <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>        <span class=\"token keyword\">const</span> bounds <span class=\"token operator\">=</span> type <span class=\"token operator\">==</span> <span class=\"token string\">\"desc\"</span> <span class=\"token operator\">?</span> <span class=\"token function\">desc</span><span class=\"token punctuation\">(</span>uiName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">bounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">text</span><span class=\"token punctuation\">(</span>uiName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">bounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击坐标：\"</span><span class=\"token punctuation\">,</span> bounds<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bounds<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>    <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>    <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">click</span><span class=\"token punctuation\">(</span>bounds<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bounds<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre></pre></td></tr><tr><td data-num=\"326\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"327\"></td><td><pre> * 根据坐标直接点击</pre></td></tr><tr><td data-num=\"328\"></td><td><pre> * @param &#123;*&#125; bounds </pre></td></tr><tr><td data-num=\"329\"></td><td><pre> * @returns </pre></td></tr><tr><td data-num=\"330\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">clickCenterXY</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>    <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>    <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">+</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre></pre></td></tr><tr><td data-num=\"337\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"338\"></td><td><pre> * 自动判断程序是否卡顿，恢复方法</pre></td></tr><tr><td data-num=\"339\"></td><td><pre> * 判断依据：1. 不在活动界面 2. 停留某个界面长达 15s</pre></td></tr><tr><td data-num=\"340\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">recoverApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">></span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>            task_process <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>            <span class=\"token comment\">// 计时器重置</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>            <span class=\"token constant\">JUDGE_TIME</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>            app<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span>appPackageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>            <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"停留某个页面超过15s,自动返回，重置定时器。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>你也可以使用 hamibot 这样的平台，里面包含了众多脚本，<span class=\"exturl\" data-url=\"aHR0czovL3d3dy5iYWlkdS5jb20=\">hamibot 的使用</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYW1pYm90LmNvbS9yZWZlcnJhbHMvZXBtaA==\">立即注册 hamibot</span></p>\n<h2 id=\"ios用户使用快捷指令\"><a class=\"anchor\" href=\"#ios用户使用快捷指令\">#</a> ios 用户：使用快捷指令</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmN1dHMuY29tLw==\">快捷指令库</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGFyZWN1dHMuY24v\">捷径社区</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmN1dHMuY29tLw==\">捷径库</span><br />\n你可以在上方按钮获取更多的 ios 快捷指令，目前暂未提供双十一相关的指令</p>\n",
            "tags": [
                "自动化",
                "小工具"
            ]
        }
    ]
}