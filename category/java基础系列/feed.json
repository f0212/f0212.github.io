{
    "version": "https://jsonfeed.org/version/1",
    "title": "欢迎来到 fo 的网络安全小站 • All posts by \"java基础系列\" category",
    "description": "欢迎来到 fo 的网络安全小站",
    "home_page_url": "http://zhyzhyzhy.cn",
    "items": [
        {
            "id": "http://zhyzhyzhy.cn/2022/10/19/Java%E5%8F%8D%E5%B0%84/",
            "url": "http://zhyzhyzhy.cn/2022/10/19/Java%E5%8F%8D%E5%B0%84/",
            "title": "Java 反射",
            "date_published": "2022-10-18T16:00:00.000Z",
            "content_html": "<h1 id=\"反射的概述\"><a class=\"anchor\" href=\"#反射的概述\">#</a> 反射的概述</h1>\n<blockquote>\n<p>反射非常强大和有用，现在市面上绝大部分框架 (spring、mybatis、rocketmq 等等) 中都有反射的影子，反射机制在框架设计中占有举足轻重的作用。</p>\n</blockquote>\n<p>学习之前的几个问题</p>\n<ul>\n<li>反射是什么？</li>\n<li>反射有什么用？</li>\n<li>反射的实现原理？</li>\n<li>怎么用反射？</li>\n</ul>\n<h1 id=\"反射是什么\"><a class=\"anchor\" href=\"#反射是什么\">#</a> 反射是什么？</h1>\n<p>反射是 java 语言的一个特性，它允程序在运行时（注意不是编译的时候）来进行自我检查并且对内部的成员进行操作。</p>\n<p>反射是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法，对于任意一个对象，都能够调用它的任意方法和属性，这种动态获取信息以及动态调用对象方法的功能称为 java 语言的反射机制。</p>\n<p>一句话总结：<em><strong>反射就是在运行时才知道要操作的类是什么，并且可以在运行时获取类的完整构造，并调用对应的方法.</strong></em></p>\n<h1 id=\"为什么要用反射\"><a class=\"anchor\" href=\"#为什么要用反射\">#</a> 为什么要用反射？</h1>\n<p>Java Reflection 功能非常强大，并且非常有用，比如：</p>\n<ul>\n<li>获取任意类的名称、package 信息、所有属性、方法、注解、类型、类加载器等</li>\n<li><em><strong>获取任意对象的属性，并且能改变对象的属性</strong></em></li>\n<li><em><strong>调用任意对象的方法</strong></em></li>\n<li>判断任意一个对象所属的类</li>\n<li><em><strong>实例化任意一个类的对象</strong></em></li>\n<li>通过反射我们可以实现动态装配，降低代码的耦合度，动态代理等。</li>\n</ul>\n<h1 id=\"怎么使用反射\"><a class=\"anchor\" href=\"#怎么使用反射\">#</a> 怎么使用反射？</h1>\n<h2 id=\"获取class对象-调用对象方法\"><a class=\"anchor\" href=\"#获取class对象-调用对象方法\">#</a> 获取 Class 对象 -&gt; 调用对象方法</h2>\n<p>Class 对象是反射的核心，通过 Class 对象可以调用任意类的方法</p>\n<h2 id=\"获取class对象的方法\"><a class=\"anchor\" href=\"#获取class对象的方法\">#</a> 获取 Class 对象的方法</h2>\n<h3 id=\"一-调用某个类的getclass方法\"><a class=\"anchor\" href=\"#一-调用某个类的getclass方法\">#</a> 一、 调用某个类的 getClass 方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Person</span> person <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Class</span> aClass <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"二-调用某个类的class属性获取该类的class对象\"><a class=\"anchor\" href=\"#二-调用某个类的class属性获取该类的class对象\">#</a> 二、 调用某个类的 class 属性获取该类的 Class 对象</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Class</span> aClass <span class=\"token operator\">=</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"三-使用class类中的forname方法最常用\"><a class=\"anchor\" href=\"#三-使用class类中的forname方法最常用\">#</a> 三、 使用 Class 类中的 forName () 方法（最常用）</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Class</span> aClass <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"类的全路径名\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"创建对象的方法\"><a class=\"anchor\" href=\"#创建对象的方法\">#</a> 创建对象的方法</h2>\n<h3 id=\"一-调用class对象的newinstance\"><a class=\"anchor\" href=\"#一-调用class对象的newinstance\">#</a> 一 、 调用 Class 对象的 newInstance ()</h3>\n<blockquote>\n<p>要求该 Class 对象对应的类必须由空参构造器</p>\n</blockquote>\n<h3 id=\"二-调用constructor对象的new-instance\"><a class=\"anchor\" href=\"#二-调用constructor对象的new-instance\">#</a> 二、 调用 Constructor 对象的 new Instance ()</h3>\n<blockquote>\n<p>通过 Constructor 对象创建类对象可以选择特定构造方法，而通过 Class 对象则只能使用默认的无参数构造方法。</p>\n</blockquote>\n<h2 id=\"反射对对象的属性和方法进行操作\"><a class=\"anchor\" href=\"#反射对对象的属性和方法进行操作\">#</a> 反射对对象的属性和方法进行操作</h2>\n<h3 id=\"1-获取类的成员变量的信息\"><a class=\"anchor\" href=\"#1-获取类的成员变量的信息\">#</a> 1、获取类的成员变量的信息</h3>\n<pre><code>getField(String name)  获取某个共有的属性对象  \ngetFields()  获取所有公有的属性对象  \ngetDeclaredField(String name)  获取某个属性对象（public和非public）  \ngetDeclaredFields()  获取所有属性对象（public和非public）  \n</code></pre>\n<h3 id=\"2-获得类方法\"><a class=\"anchor\" href=\"#2-获得类方法\">#</a> 2、获得类方法</h3>\n<pre><code>getMethod(String name,Class...&lt;?&gt; parameterTypes)  获取某个公有的方法  \ngetMethods()  获取所有公有的方法  \ngetDeclaredMethod(String name,Class...&lt;?&gt; parameterTypes)  获取该类某个方法（public和非public）  \ngetDeclaredMethods()  获取该类所有方法（public和非public） \n</code></pre>\n<h3 id=\"3-获得构造函数\"><a class=\"anchor\" href=\"#3-获得构造函数\">#</a> 3、获得构造函数</h3>\n<pre><code>getConstructor(Class...&lt;?&gt; parameterTypes)  获得该类中与参数类型匹配的公有构造方法\ngetConstructor()  获得该类中所有公有构造方法\ngetDeclaredConstructor(Class...&lt;?&gt; parameterTypes)  获得该类中与参数类型匹配的构造方法\ngetDeclaredConstructors()  获得该类中所有构造方法\n</code></pre>\n<h1 id=\"一个小案例\"><a class=\"anchor\" href=\"#一个小案例\">#</a> 一个小案例</h1>\n<blockquote>\n<p>下面写个小案例来了解如何在实际工作中进行使用</p>\n</blockquote>\n<p>Person 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> money<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> money<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> money<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\">Person</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span> age <span class=\"token operator\">==</span> person<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&amp;&amp;</span> money <span class=\"token operator\">==</span> person<span class=\"token punctuation\">.</span>money <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Person&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token string\">\"name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token string\">\", age=\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token string\">\", money=\"</span> <span class=\"token operator\">+</span> money <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span> money<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setMoney</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> money<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ClassNotFoundException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InstantiationException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IllegalAccessException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">NoSuchMethodException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InvocationTargetException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 获取 Person 类的 class 对象</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Class</span> aClass <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test.Person\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>aClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 获取 Person 类所有的方法信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Method</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> declaredMethods <span class=\"token operator\">=</span> aClass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> m <span class=\"token operator\">:</span> declaredMethods<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token comment\">// 获取 Person 类所有的成员变量信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Field</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> declaredFields <span class=\"token operator\">=</span> aClass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> f <span class=\"token operator\">:</span> declaredFields<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">// 获取 Person 类所有的构造方法信息</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> declaredConstructors <span class=\"token operator\">=</span> aClass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredConstructors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Constructor</span> c <span class=\"token operator\">:</span> declaredConstructors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 使用 newInstance 创建对象</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">Person</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">)</span>aClass<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 调用构造方法来创建对象</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 获取构造方法</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">Constructor</span> declaredConstructors1 <span class=\"token operator\">=</span> aClass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredConstructor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// 创建对象</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\">Person</span> jx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">)</span>declaredConstructors1<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>jx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p><em><strong>了解了反射的使用，但如果你想对反射掌握得更好，还需深入理解反射背后的底层实现原理。</strong></em></p>\n",
            "tags": [
                "网络安全",
                "JAVA安全",
                "JAVA基础"
            ]
        }
    ]
}